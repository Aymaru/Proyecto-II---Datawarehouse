<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="11/12/2019 10:53:37 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DESKTOP-P0R7PMV"
  DTS:CreatorName="ESTUDIANTES\ayma-93"
  DTS:DTSID="{891AEB58-67F1-4129-9425-CEFD96B45B65}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.1300.375"
  DTS:LocaleID="22538"
  DTS:ObjectName="ETL Facturas 101-200 a mongo"
  DTS:PackageType="5"
  DTS:VersionBuild="52"
  DTS:VersionGUID="{9C3B6F35-8466-4923-BBB4-8DBDEDE7FFDB}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{FAB45CBD-360D-439E-97C1-106068130EBB}"
      DTS:ObjectName="Excel Connection Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=C:\Users\ayma-93\Documents\TEC\Semestre II - 2019\Bases de Datos II\Proyectos\Proyecto-II---Datawarehouse\DATOS MAESTROS.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[MongoDB 1]"
      DTS:CreationName="ZS-MONGODB"
      DTS:DTSID="{DB900B94-2DBC-455F-8201-395266EAFA7F}"
      DTS:ObjectName="MongoDB 1">
      <DTS:ObjectData>
        <ConnectionManager
          ConnectionString="Host=localhost:27017;Database=ventas;UserName=;Timeout=60;Options=connectTimeoutMS=60000;UseClientCertificate=False;CertificatePath=;CheckCertificateRevocation=True;AllowInvalidCertificate=False;CursorOptions=;ReadConcern=;RetainSameConnection=False"
          Timeout="60"
          RetryInterval="10"
          MaxRetryOnError="3"
          MaxParallelThreads="8"
          ProgressUpdateInterval="4096" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Importar Ventas a Mongo"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Tarea Flujo de datos"
      DTS:DTSID="{C58C08B5-36B6-4B81-B50F-14421B01F1F5}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Importar Ventas a Mongo">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Importar Ventas a Mongo\Columna derivada"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Columna derivada;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; Todos los derechos reservados; http://www.microsoft.com/sql/support;0"
              description="Crea nuevos valores de columna aplicando expresiones a las columnas de entrada de la transformación. Crea nuevas columnas o sobrescribe las columnas existentes. Por ejemplo, se concatenan los valores de las columnas 'nombre' y 'apellidos' para crear una columna 'nombre completo'."
              name="Columna derivada"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Importar Ventas a Mongo\Columna derivada.Inputs[Entrada de columna derivada]"
                  description="Entrada en la transformación Columna derivada"
                  name="Entrada de columna derivada">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Importar Ventas a Mongo\Columna derivada.Outputs[Salida de columna derivada]"
                  description="Salida predeterminada de la transformación Columna derivada"
                  exclusionGroup="1"
                  name="Salida de columna derivada"
                  synchronousInputId="Package\Importar Ventas a Mongo\Columna derivada.Inputs[Entrada de columna derivada]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Columna derivada.Outputs[Salida de columna derivada].Columns[idItemNoReconocido]"
                      dataType="i4"
                      errorOrTruncationOperation="Cálculo"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Importar Ventas a Mongo\Columna derivada.Outputs[Salida de columna derivada].Columns[idItemNoReconocido]"
                      name="idItemNoReconocido"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Expresión de columna derivada"
                          name="Expression">-1</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Expresión descriptiva de columna derivada"
                          expressionType="Notify"
                          name="FriendlyExpression">-1</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Importar Ventas a Mongo\Columna derivada.Outputs[Salida de error de columna derivada]"
                  description="Salida de error de la transformación Columna derivada"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Salida de error de columna derivada"
                  synchronousInputId="Package\Importar Ventas a Mongo\Columna derivada.Inputs[Entrada de columna derivada]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Columna derivada.Outputs[Salida de error de columna derivada].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Importar Ventas a Mongo\Columna derivada.Outputs[Salida de error de columna derivada].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Columna derivada.Outputs[Salida de error de columna derivada].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Importar Ventas a Mongo\Columna derivada.Outputs[Salida de error de columna derivada].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Importar Ventas a Mongo\Columna derivada 1"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Columna derivada;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; Todos los derechos reservados; http://www.microsoft.com/sql/support;0"
              description="Crea nuevos valores de columna aplicando expresiones a las columnas de entrada de la transformación. Crea nuevas columnas o sobrescribe las columnas existentes. Por ejemplo, se concatenan los valores de las columnas 'nombre' y 'apellidos' para crear una columna 'nombre completo'."
              name="Columna derivada 1"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Importar Ventas a Mongo\Columna derivada 1.Inputs[Entrada de columna derivada]"
                  description="Entrada en la transformación Columna derivada"
                  name="Entrada de columna derivada">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\Columna derivada 1.Inputs[Entrada de columna derivada].Columns[fecha]"
                      cachedDataType="wstr"
                      cachedLength="32"
                      cachedName="fecha"
                      lineageId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[fecha]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\Columna derivada 1.Inputs[Entrada de columna derivada].Columns[fechaVencimiento]"
                      cachedDataType="wstr"
                      cachedLength="32"
                      cachedName="fechaVencimiento"
                      lineageId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[fechaVencimiento]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Importar Ventas a Mongo\Columna derivada 1.Outputs[Salida de columna derivada]"
                  description="Salida predeterminada de la transformación Columna derivada"
                  exclusionGroup="1"
                  name="Salida de columna derivada"
                  synchronousInputId="Package\Importar Ventas a Mongo\Columna derivada 1.Inputs[Entrada de columna derivada]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Columna derivada 1.Outputs[Salida de columna derivada].Columns[fecha_corregida]"
                      dataType="wstr"
                      errorOrTruncationOperation="Cálculo"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\Importar Ventas a Mongo\Columna derivada 1.Outputs[Salida de columna derivada].Columns[fecha_corregida]"
                      name="fecha_corregida"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Expresión de columna derivada"
                          name="Expression">[SUBSTRING](#{Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[fecha]},1,4) + "/" + [SUBSTRING](#{Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[fecha]},5,2) + "/" + [SUBSTRING](#{Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[fecha]},7,2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Expresión descriptiva de columna derivada"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING(fecha,1,4) + "/" + SUBSTRING(fecha,5,2) + "/" + SUBSTRING(fecha,7,2)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Columna derivada 1.Outputs[Salida de columna derivada].Columns[fechaVencimiento_corregida]"
                      dataType="wstr"
                      errorOrTruncationOperation="Cálculo"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\Importar Ventas a Mongo\Columna derivada 1.Outputs[Salida de columna derivada].Columns[fechaVencimiento_corregida]"
                      name="fechaVencimiento_corregida"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Expresión de columna derivada"
                          name="Expression">[SUBSTRING](#{Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[fechaVencimiento]},1,4) + "/" + [SUBSTRING](#{Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[fechaVencimiento]},5,2) + "/" + [SUBSTRING](#{Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[fechaVencimiento]},7,2)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Expresión descriptiva de columna derivada"
                          expressionType="Notify"
                          name="FriendlyExpression">SUBSTRING(fechaVencimiento,1,4) + "/" + SUBSTRING(fechaVencimiento,5,2) + "/" + SUBSTRING(fechaVencimiento,7,2)</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Importar Ventas a Mongo\Columna derivada 1.Outputs[Salida de error de columna derivada]"
                  description="Salida de error de la transformación Columna derivada"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Salida de error de columna derivada"
                  synchronousInputId="Package\Importar Ventas a Mongo\Columna derivada 1.Inputs[Entrada de columna derivada]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Columna derivada 1.Outputs[Salida de error de columna derivada].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Importar Ventas a Mongo\Columna derivada 1.Outputs[Salida de error de columna derivada].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Columna derivada 1.Outputs[Salida de error de columna derivada].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Importar Ventas a Mongo\Columna derivada 1.Outputs[Salida de error de columna derivada].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Importar Ventas a Mongo\Combinación de mezcla"
              componentClassID="Microsoft.MergeJoin"
              contactInfo="Combinación de mezcla;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; Todos los derechos reservados; http://www.microsoft.com/sql/support;1"
              description="Combina dos flujos de datos ordenados en uno solo mediante la combinación FULL, LEFT o INNER. Se recomienda esta transformación cuando se pueden ordenar los flujos de datos en sus orígenes."
              name="Combinación de mezcla"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Especifica el tipo de combinación que se debe realizar."
                  name="JoinType"
                  typeConverter="JoinType">1</property>
                <property
                  dataType="System.Int32"
                  description="Especifica el número de columnas de la clave de ordenación."
                  name="NumKeyColumns">1</property>
                <property
                  dataType="System.Boolean"
                  description="Indica si los valores NULL se tratan como valores iguales."
                  name="TreatNullsAsEqual">true</property>
                <property
                  dataType="System.Int32"
                  description="Indica la cantidad máxima solicitada de búferes por entrada antes del bloqueo."
                  name="MaxBuffersPerInput">5</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Importar Ventas a Mongo\Combinación de mezcla.Inputs[Entrada izquierda de combinación de mezcla]"
                  hasSideEffects="true"
                  name="Entrada izquierda de combinación de mezcla">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\Combinación de mezcla.Inputs[Entrada izquierda de combinación de mezcla].Columns[IDItem]"
                      cachedDataType="wstr"
                      cachedLength="28"
                      cachedName="IDItem"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Importar Ventas a Mongo\Ordenar.Outputs[Salida de ordenación].Columns[IDItem]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\Combinación de mezcla.Inputs[Entrada izquierda de combinación de mezcla].Columns[idFactura]"
                      cachedDataType="wstr"
                      cachedLength="36"
                      cachedName="idFactura"
                      lineageId="Package\Importar Ventas a Mongo\Ordenar.Outputs[Salida de ordenación].Columns[idFactura]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\Combinación de mezcla.Inputs[Entrada izquierda de combinación de mezcla].Columns[fechaVencimiento]"
                      cachedDataType="date"
                      cachedName="fechaVencimiento"
                      lineageId="Package\Importar Ventas a Mongo\Ordenar.Outputs[Salida de ordenación].Columns[fechaVencimiento]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\Combinación de mezcla.Inputs[Entrada izquierda de combinación de mezcla].Columns[fecha]"
                      cachedDataType="date"
                      cachedName="fecha"
                      lineageId="Package\Importar Ventas a Mongo\Ordenar.Outputs[Salida de ordenación].Columns[fecha]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\Combinación de mezcla.Inputs[Entrada izquierda de combinación de mezcla].Columns[idCliente]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="idCliente"
                      lineageId="Package\Importar Ventas a Mongo\Ordenar.Outputs[Salida de ordenación].Columns[idCliente]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\Combinación de mezcla.Inputs[Entrada izquierda de combinación de mezcla].Columns[cantidad]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="cantidad"
                      lineageId="Package\Importar Ventas a Mongo\Ordenar.Outputs[Salida de ordenación].Columns[cantidad]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\Combinación de mezcla.Inputs[Entrada izquierda de combinación de mezcla].Columns[precio]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="precio"
                      lineageId="Package\Importar Ventas a Mongo\Ordenar.Outputs[Salida de ordenación].Columns[precio]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\Combinación de mezcla.Inputs[Entrada izquierda de combinación de mezcla].Columns[total]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="total"
                      lineageId="Package\Importar Ventas a Mongo\Ordenar.Outputs[Salida de ordenación].Columns[total]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\Combinación de mezcla.Inputs[Entrada izquierda de combinación de mezcla].Columns[almacén]"
                      cachedDataType="wstr"
                      cachedLength="8"
                      cachedName="almacén"
                      lineageId="Package\Importar Ventas a Mongo\Ordenar.Outputs[Salida de ordenación].Columns[almacén]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\Combinación de mezcla.Inputs[Entrada izquierda de combinación de mezcla].Columns[idVendedor]"
                      cachedDataType="wstr"
                      cachedLength="8"
                      cachedName="idVendedor"
                      lineageId="Package\Importar Ventas a Mongo\Ordenar.Outputs[Salida de ordenación].Columns[idVendedor]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\Combinación de mezcla.Inputs[Entrada izquierda de combinación de mezcla].Columns[totalUSD]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="totalUSD"
                      lineageId="Package\Importar Ventas a Mongo\Ordenar.Outputs[Salida de ordenación].Columns[totalUSD]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\Combinación de mezcla.Inputs[Entrada izquierda de combinación de mezcla].Columns[impuesto]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="impuesto"
                      lineageId="Package\Importar Ventas a Mongo\Ordenar.Outputs[Salida de ordenación].Columns[impuesto]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\Combinación de mezcla.Inputs[Entrada izquierda de combinación de mezcla].Columns[impuestoUSD]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="impuestoUSD"
                      lineageId="Package\Importar Ventas a Mongo\Ordenar.Outputs[Salida de ordenación].Columns[impuestoUSD]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\Combinación de mezcla.Inputs[Entrada izquierda de combinación de mezcla].Columns[tipoCambio]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="tipoCambio"
                      lineageId="Package\Importar Ventas a Mongo\Ordenar.Outputs[Salida de ordenación].Columns[tipoCambio]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\Combinación de mezcla.Inputs[Entrada izquierda de combinación de mezcla].Columns[ganacia]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="ganacia"
                      lineageId="Package\Importar Ventas a Mongo\Ordenar.Outputs[Salida de ordenación].Columns[ganacia]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\Combinación de mezcla.Inputs[Entrada izquierda de combinación de mezcla].Columns[gananciaUSD]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="gananciaUSD"
                      lineageId="Package\Importar Ventas a Mongo\Ordenar.Outputs[Salida de ordenación].Columns[gananciaUSD]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\Combinación de mezcla.Inputs[Entrada izquierda de combinación de mezcla].Columns[moneda]"
                      cachedDataType="wstr"
                      cachedLength="12"
                      cachedName="moneda"
                      lineageId="Package\Importar Ventas a Mongo\Ordenar.Outputs[Salida de ordenación].Columns[moneda]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Importar Ventas a Mongo\Combinación de mezcla.Inputs[Entrada derecha de combinación de mezcla]"
                  hasSideEffects="true"
                  name="Entrada derecha de combinación de mezcla">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\Combinación de mezcla.Inputs[Entrada derecha de combinación de mezcla].Columns[IDItem]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="IDItem"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Importar Ventas a Mongo\Ordenar 1.Outputs[Salida de ordenación].Columns[IDItem]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla]"
                  isSorted="true"
                  name="Salida de combinación de mezcla">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[idFactura]"
                      dataType="wstr"
                      length="36"
                      lineageId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[idFactura]"
                      name="idFactura">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="La columna de entrada asociada a esta columna de salida"
                          name="InputColumnID">#{Package\Importar Ventas a Mongo\Combinación de mezcla.Inputs[Entrada izquierda de combinación de mezcla].Columns[idFactura]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[fecha]"
                      dataType="date"
                      lineageId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[fecha]"
                      name="fecha">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="La columna de entrada asociada a esta columna de salida"
                          name="InputColumnID">#{Package\Importar Ventas a Mongo\Combinación de mezcla.Inputs[Entrada izquierda de combinación de mezcla].Columns[fechaVencimiento]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[fechaVencimiento]"
                      dataType="date"
                      lineageId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[fechaVencimiento]"
                      name="fechaVencimiento">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="La columna de entrada asociada a esta columna de salida"
                          name="InputColumnID">#{Package\Importar Ventas a Mongo\Combinación de mezcla.Inputs[Entrada izquierda de combinación de mezcla].Columns[fecha]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[idCliente]"
                      dataType="wstr"
                      length="20"
                      lineageId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[idCliente]"
                      name="idCliente">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="La columna de entrada asociada a esta columna de salida"
                          name="InputColumnID">#{Package\Importar Ventas a Mongo\Combinación de mezcla.Inputs[Entrada izquierda de combinación de mezcla].Columns[idCliente]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[idItem]"
                      dataType="wstr"
                      length="28"
                      lineageId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[idItem]"
                      name="idItem"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="La columna de entrada asociada a esta columna de salida"
                          name="InputColumnID">#{Package\Importar Ventas a Mongo\Combinación de mezcla.Inputs[Entrada izquierda de combinación de mezcla].Columns[IDItem]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[cantidad]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[cantidad]"
                      name="cantidad">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="La columna de entrada asociada a esta columna de salida"
                          name="InputColumnID">#{Package\Importar Ventas a Mongo\Combinación de mezcla.Inputs[Entrada izquierda de combinación de mezcla].Columns[cantidad]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[precio]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[precio]"
                      name="precio">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="La columna de entrada asociada a esta columna de salida"
                          name="InputColumnID">#{Package\Importar Ventas a Mongo\Combinación de mezcla.Inputs[Entrada izquierda de combinación de mezcla].Columns[precio]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[total]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[total]"
                      name="total">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="La columna de entrada asociada a esta columna de salida"
                          name="InputColumnID">#{Package\Importar Ventas a Mongo\Combinación de mezcla.Inputs[Entrada izquierda de combinación de mezcla].Columns[total]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[almacén]"
                      dataType="wstr"
                      length="8"
                      lineageId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[almacén]"
                      name="almacén">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="La columna de entrada asociada a esta columna de salida"
                          name="InputColumnID">#{Package\Importar Ventas a Mongo\Combinación de mezcla.Inputs[Entrada izquierda de combinación de mezcla].Columns[almacén]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[idVendedor]"
                      dataType="wstr"
                      length="8"
                      lineageId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[idVendedor]"
                      name="idVendedor">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="La columna de entrada asociada a esta columna de salida"
                          name="InputColumnID">#{Package\Importar Ventas a Mongo\Combinación de mezcla.Inputs[Entrada izquierda de combinación de mezcla].Columns[idVendedor]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[totalUSD]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[totalUSD]"
                      name="totalUSD">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="La columna de entrada asociada a esta columna de salida"
                          name="InputColumnID">#{Package\Importar Ventas a Mongo\Combinación de mezcla.Inputs[Entrada izquierda de combinación de mezcla].Columns[totalUSD]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[impuesto]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[impuesto]"
                      name="impuesto">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="La columna de entrada asociada a esta columna de salida"
                          name="InputColumnID">#{Package\Importar Ventas a Mongo\Combinación de mezcla.Inputs[Entrada izquierda de combinación de mezcla].Columns[impuesto]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[impuestoUSD]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[impuestoUSD]"
                      name="impuestoUSD">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="La columna de entrada asociada a esta columna de salida"
                          name="InputColumnID">#{Package\Importar Ventas a Mongo\Combinación de mezcla.Inputs[Entrada izquierda de combinación de mezcla].Columns[impuestoUSD]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[tipoCambio]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[tipoCambio]"
                      name="tipoCambio">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="La columna de entrada asociada a esta columna de salida"
                          name="InputColumnID">#{Package\Importar Ventas a Mongo\Combinación de mezcla.Inputs[Entrada izquierda de combinación de mezcla].Columns[tipoCambio]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[ganacia]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[ganacia]"
                      name="ganacia">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="La columna de entrada asociada a esta columna de salida"
                          name="InputColumnID">#{Package\Importar Ventas a Mongo\Combinación de mezcla.Inputs[Entrada izquierda de combinación de mezcla].Columns[ganacia]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[gananciaUSD]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[gananciaUSD]"
                      name="gananciaUSD">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="La columna de entrada asociada a esta columna de salida"
                          name="InputColumnID">#{Package\Importar Ventas a Mongo\Combinación de mezcla.Inputs[Entrada izquierda de combinación de mezcla].Columns[gananciaUSD]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[idItemExistente]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[idItemExistente]"
                      name="idItemExistente">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="La columna de entrada asociada a esta columna de salida"
                          name="InputColumnID">#{Package\Importar Ventas a Mongo\Combinación de mezcla.Inputs[Entrada derecha de combinación de mezcla].Columns[IDItem]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[moneda]"
                      dataType="wstr"
                      length="12"
                      lineageId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[moneda]"
                      name="moneda">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="La columna de entrada asociada a esta columna de salida"
                          name="InputColumnID">#{Package\Importar Ventas a Mongo\Combinación de mezcla.Inputs[Entrada izquierda de combinación de mezcla].Columns[moneda]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Importar Ventas a Mongo\Conversión de datos"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Conversión de datos;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; Todos los derechos reservados; http://www.microsoft.com/sql/support;0"
              description="Conversión de datos"
              name="Conversión de datos"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Importar Ventas a Mongo\Conversión de datos.Inputs[Entrada de conversión de datos]"
                  name="Entrada de conversión de datos">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\Conversión de datos.Inputs[Entrada de conversión de datos].Columns[cantidad]"
                      cachedDataType="wstr"
                      cachedLength="24"
                      cachedName="cantidad"
                      lineageId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[cantidad]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\Conversión de datos.Inputs[Entrada de conversión de datos].Columns[precio]"
                      cachedDataType="wstr"
                      cachedLength="44"
                      cachedName="precio"
                      lineageId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[precio]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\Conversión de datos.Inputs[Entrada de conversión de datos].Columns[total]"
                      cachedDataType="wstr"
                      cachedLength="40"
                      cachedName="total"
                      lineageId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[total]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\Conversión de datos.Inputs[Entrada de conversión de datos].Columns[totalUSD]"
                      cachedDataType="wstr"
                      cachedLength="24"
                      cachedName="totalUSD"
                      lineageId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[totalUSD]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\Conversión de datos.Inputs[Entrada de conversión de datos].Columns[impuesto]"
                      cachedDataType="wstr"
                      cachedLength="36"
                      cachedName="impuesto"
                      lineageId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[impuesto]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\Conversión de datos.Inputs[Entrada de conversión de datos].Columns[impuestoUSD]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="impuestoUSD"
                      lineageId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[impuestoUSD]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\Conversión de datos.Inputs[Entrada de conversión de datos].Columns[tipoCambio]"
                      cachedDataType="wstr"
                      cachedLength="16"
                      cachedName="tipoCambio"
                      lineageId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[tipoCambio]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\Conversión de datos.Inputs[Entrada de conversión de datos].Columns[ganacia]"
                      cachedDataType="wstr"
                      cachedLength="44"
                      cachedName="ganacia"
                      lineageId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[ganacia]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\Conversión de datos.Inputs[Entrada de conversión de datos].Columns[gananciaUSD]"
                      cachedDataType="wstr"
                      cachedLength="36"
                      cachedName="gananciaUSD"
                      lineageId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[gananciaUSD]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\Conversión de datos.Inputs[Entrada de conversión de datos].Columns[fecha_corregida]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="fecha_corregida"
                      lineageId="Package\Importar Ventas a Mongo\Columna derivada 1.Outputs[Salida de columna derivada].Columns[fecha_corregida]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\Conversión de datos.Inputs[Entrada de conversión de datos].Columns[fechaVencimiento_corregida]"
                      cachedDataType="wstr"
                      cachedLength="10"
                      cachedName="fechaVencimiento_corregida"
                      lineageId="Package\Importar Ventas a Mongo\Columna derivada 1.Outputs[Salida de columna derivada].Columns[fechaVencimiento_corregida]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Importar Ventas a Mongo\Conversión de datos.Outputs[Salida de conversión de datos]"
                  exclusionGroup="1"
                  name="Salida de conversión de datos"
                  synchronousInputId="Package\Importar Ventas a Mongo\Conversión de datos.Inputs[Entrada de conversión de datos]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Conversión de datos.Outputs[Salida de conversión de datos].Columns[Copy of cantidad]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Importar Ventas a Mongo\Conversión de datos.Outputs[Salida de conversión de datos].Columns[Copy of cantidad]"
                      name="Copy of cantidad"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Especifica la columna de entrada usada como origen de datos para la conversión."
                          name="SourceInputColumnLineageID">#{Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[cantidad]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indica si la columna usa las rutinas de análisis más rápidas independientes de la configuración regional."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Conversión de datos.Outputs[Salida de conversión de datos].Columns[Copy of precio]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Importar Ventas a Mongo\Conversión de datos.Outputs[Salida de conversión de datos].Columns[Copy of precio]"
                      name="Copy of precio"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Especifica la columna de entrada usada como origen de datos para la conversión."
                          name="SourceInputColumnLineageID">#{Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[precio]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indica si la columna usa las rutinas de análisis más rápidas independientes de la configuración regional."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Conversión de datos.Outputs[Salida de conversión de datos].Columns[Copy of total]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Importar Ventas a Mongo\Conversión de datos.Outputs[Salida de conversión de datos].Columns[Copy of total]"
                      name="Copy of total"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Especifica la columna de entrada usada como origen de datos para la conversión."
                          name="SourceInputColumnLineageID">#{Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[total]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indica si la columna usa las rutinas de análisis más rápidas independientes de la configuración regional."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Conversión de datos.Outputs[Salida de conversión de datos].Columns[Copy of totalUSD]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Importar Ventas a Mongo\Conversión de datos.Outputs[Salida de conversión de datos].Columns[Copy of totalUSD]"
                      name="Copy of totalUSD"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Especifica la columna de entrada usada como origen de datos para la conversión."
                          name="SourceInputColumnLineageID">#{Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[totalUSD]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indica si la columna usa las rutinas de análisis más rápidas independientes de la configuración regional."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Conversión de datos.Outputs[Salida de conversión de datos].Columns[Copy of impuesto]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Importar Ventas a Mongo\Conversión de datos.Outputs[Salida de conversión de datos].Columns[Copy of impuesto]"
                      name="Copy of impuesto"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Especifica la columna de entrada usada como origen de datos para la conversión."
                          name="SourceInputColumnLineageID">#{Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[impuesto]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indica si la columna usa las rutinas de análisis más rápidas independientes de la configuración regional."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Conversión de datos.Outputs[Salida de conversión de datos].Columns[Copy of impuestoUSD]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Importar Ventas a Mongo\Conversión de datos.Outputs[Salida de conversión de datos].Columns[Copy of impuestoUSD]"
                      name="Copy of impuestoUSD"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Especifica la columna de entrada usada como origen de datos para la conversión."
                          name="SourceInputColumnLineageID">#{Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[impuestoUSD]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indica si la columna usa las rutinas de análisis más rápidas independientes de la configuración regional."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Conversión de datos.Outputs[Salida de conversión de datos].Columns[Copy of tipoCambio]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Importar Ventas a Mongo\Conversión de datos.Outputs[Salida de conversión de datos].Columns[Copy of tipoCambio]"
                      name="Copy of tipoCambio"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Especifica la columna de entrada usada como origen de datos para la conversión."
                          name="SourceInputColumnLineageID">#{Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[tipoCambio]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indica si la columna usa las rutinas de análisis más rápidas independientes de la configuración regional."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Conversión de datos.Outputs[Salida de conversión de datos].Columns[Copy of ganacia]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Importar Ventas a Mongo\Conversión de datos.Outputs[Salida de conversión de datos].Columns[Copy of ganacia]"
                      name="Copy of ganacia"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Especifica la columna de entrada usada como origen de datos para la conversión."
                          name="SourceInputColumnLineageID">#{Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[ganacia]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indica si la columna usa las rutinas de análisis más rápidas independientes de la configuración regional."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Conversión de datos.Outputs[Salida de conversión de datos].Columns[Copy of gananciaUSD]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Importar Ventas a Mongo\Conversión de datos.Outputs[Salida de conversión de datos].Columns[Copy of gananciaUSD]"
                      name="Copy of gananciaUSD"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Especifica la columna de entrada usada como origen de datos para la conversión."
                          name="SourceInputColumnLineageID">#{Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[gananciaUSD]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indica si la columna usa las rutinas de análisis más rápidas independientes de la configuración regional."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Conversión de datos.Outputs[Salida de conversión de datos].Columns[Copy of fecha_corregida]"
                      dataType="date"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Importar Ventas a Mongo\Conversión de datos.Outputs[Salida de conversión de datos].Columns[Copy of fecha_corregida]"
                      name="Copy of fecha_corregida"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Especifica la columna de entrada usada como origen de datos para la conversión."
                          name="SourceInputColumnLineageID">#{Package\Importar Ventas a Mongo\Columna derivada 1.Outputs[Salida de columna derivada].Columns[fecha_corregida]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indica si la columna usa las rutinas de análisis más rápidas independientes de la configuración regional."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Conversión de datos.Outputs[Salida de conversión de datos].Columns[Copy of fechaVencimiento_corregida]"
                      dataType="date"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Importar Ventas a Mongo\Conversión de datos.Outputs[Salida de conversión de datos].Columns[Copy of fechaVencimiento_corregida]"
                      name="Copy of fechaVencimiento_corregida"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Especifica la columna de entrada usada como origen de datos para la conversión."
                          name="SourceInputColumnLineageID">#{Package\Importar Ventas a Mongo\Columna derivada 1.Outputs[Salida de columna derivada].Columns[fechaVencimiento_corregida]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indica si la columna usa las rutinas de análisis más rápidas independientes de la configuración regional."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Importar Ventas a Mongo\Conversión de datos.Outputs[Salida de error de conversión de datos]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Salida de error de conversión de datos"
                  synchronousInputId="Package\Importar Ventas a Mongo\Conversión de datos.Inputs[Entrada de conversión de datos]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Conversión de datos.Outputs[Salida de error de conversión de datos].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Importar Ventas a Mongo\Conversión de datos.Outputs[Salida de error de conversión de datos].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Conversión de datos.Outputs[Salida de error de conversión de datos].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Importar Ventas a Mongo\Conversión de datos.Outputs[Salida de error de conversión de datos].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Importar Ventas a Mongo\División condicional"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="División condicional;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; Todos los derechos reservados; http://www.microsoft.com/sql/support;0"
              description="Enruta filas de datos a diferentes salidas según el contenido de los datos. Se usan condiciones (expresiones de SSIS) para especificar las filas que se van a enrutar. Por ejemplo, se usa para separar los registros que deben limpiarse de los registros listos para ser cargados o para enrutar solamente un subconjunto de registros."
              name="División condicional"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Importar Ventas a Mongo\División condicional.Inputs[Entrada de división condicional]"
                  description="Entrada en la transformación División condicional"
                  name="Entrada de división condicional">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\División condicional.Inputs[Entrada de división condicional].Columns[idItemExistente]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="idItemExistente"
                      lineageId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[idItemExistente]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Importar Ventas a Mongo\División condicional.Outputs[noexiste]"
                  description="Salida 1 de la transformación División condicional"
                  errorOrTruncationOperation="Cálculo"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="noexiste"
                  synchronousInputId="Package\Importar Ventas a Mongo\División condicional.Inputs[Entrada de división condicional]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Especifica la expresión. Esta versión de expresión usa identificadores de linaje en lugar de nombres de columna."
                      name="Expression">[ISNULL](#{Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[idItemExistente]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Especifica la versión descriptiva de la expresión. Esta versión de expresión usa nombres de columna."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(idItemExistente)</property>
                    <property
                      dataType="System.Int32"
                      description="Especifica la posición de la condición en la lista de condiciones que evalúa la transformación. El orden de evaluación es del menor al mayor valor."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Importar Ventas a Mongo\División condicional.Outputs[existe]"
                  description="Salida 2 de la transformación División condicional"
                  errorOrTruncationOperation="Cálculo"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="existe"
                  synchronousInputId="Package\Importar Ventas a Mongo\División condicional.Inputs[Entrada de división condicional]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Especifica la expresión. Esta versión de expresión usa identificadores de linaje en lugar de nombres de columna."
                      name="Expression">![ISNULL](#{Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[idItemExistente]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Especifica la versión descriptiva de la expresión. Esta versión de expresión usa nombres de columna."
                      expressionType="Notify"
                      name="FriendlyExpression">!ISNULL(idItemExistente)</property>
                    <property
                      dataType="System.Int32"
                      description="Especifica la posición de la condición en la lista de condiciones que evalúa la transformación. El orden de evaluación es del menor al mayor valor."
                      name="EvaluationOrder">1</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Importar Ventas a Mongo\División condicional.Outputs[Salida predeterminada de división condicional]"
                  description="Salida predeterminada de la transformación División condicional"
                  exclusionGroup="1"
                  name="Salida predeterminada de división condicional"
                  synchronousInputId="Package\Importar Ventas a Mongo\División condicional.Inputs[Entrada de división condicional]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Importar Ventas a Mongo\División condicional.Outputs[Salida de error de división condicional]"
                  description="Salida de error de la transformación División condicional"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Salida de error de división condicional"
                  synchronousInputId="Package\Importar Ventas a Mongo\División condicional.Inputs[Entrada de división condicional]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\División condicional.Outputs[Salida de error de división condicional].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Importar Ventas a Mongo\División condicional.Outputs[Salida de error de división condicional].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\División condicional.Outputs[Salida de error de división condicional].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Importar Ventas a Mongo\División condicional.Outputs[Salida de error de división condicional].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Importar Ventas a Mongo\Grupo Items"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Origen de Excel;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; Todos los derechos reservados; http://www.microsoft.com/sql/support;1"
              description="Origen de Excel"
              name="Grupo Items"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Número de segundos antes de que se agote el tiempo de espera de un comando. Un valor de 0 indica un tiempo de espera infinito."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Especifica el nombre del objeto de base de datos usado para abrir un conjunto de filas."
                  name="OpenRowset">'GRUPO ITEMS$'</property>
                <property
                  dataType="System.String"
                  description="Especifica la variable que contiene el nombre del objeto de base de datos usado para abrir un conjunto de filas."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="Comando SQL para ejecutar."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="Variable que contiene el comando SQL para ejecutar."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Especifica el modo utilizado para obtener acceso a la base de datos."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="La asignación de parámetros del comando SQL a variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Importar Ventas a Mongo\Grupo Items.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="La conexión de tiempo de ejecución OLE DB usada para obtener acceso a la base de datos."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Importar Ventas a Mongo\Grupo Items.Outputs[Salida de origen de Excel]"
                  name="Salida de origen de Excel">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Grupo Items.Outputs[Salida de origen de Excel].Columns[IDGrupo]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Importar Ventas a Mongo\Grupo Items.Outputs[Salida de origen de Excel].ExternalColumns[GRUPO]"
                      length="255"
                      lineageId="Package\Importar Ventas a Mongo\Grupo Items.Outputs[Salida de origen de Excel].Columns[IDGrupo]"
                      name="IDGrupo"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Grupo Items.Outputs[Salida de origen de Excel].Columns[Categoria]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Importar Ventas a Mongo\Grupo Items.Outputs[Salida de origen de Excel].ExternalColumns[CATEGORIA]"
                      length="255"
                      lineageId="Package\Importar Ventas a Mongo\Grupo Items.Outputs[Salida de origen de Excel].Columns[Categoria]"
                      name="Categoria"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Grupo Items.Outputs[Salida de origen de Excel].Columns[Division]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Importar Ventas a Mongo\Grupo Items.Outputs[Salida de origen de Excel].ExternalColumns[DIVISION]"
                      length="255"
                      lineageId="Package\Importar Ventas a Mongo\Grupo Items.Outputs[Salida de origen de Excel].Columns[Division]"
                      name="Division"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\Grupo Items.Outputs[Salida de origen de Excel].ExternalColumns[GRUPO]"
                      dataType="wstr"
                      length="255"
                      name="GRUPO" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\Grupo Items.Outputs[Salida de origen de Excel].ExternalColumns[CATEGORIA]"
                      dataType="wstr"
                      length="255"
                      name="CATEGORIA" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\Grupo Items.Outputs[Salida de origen de Excel].ExternalColumns[DIVISION]"
                      dataType="wstr"
                      length="255"
                      name="DIVISION" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\Grupo Items.Outputs[Salida de origen de Excel].ExternalColumns[F4]"
                      dataType="wstr"
                      length="255"
                      name="F4" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Importar Ventas a Mongo\Grupo Items.Outputs[Salida de error de origen de Excel]"
                  isErrorOut="true"
                  name="Salida de error de origen de Excel">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Grupo Items.Outputs[Salida de error de origen de Excel].Columns[GRUPO]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Importar Ventas a Mongo\Grupo Items.Outputs[Salida de error de origen de Excel].Columns[GRUPO]"
                      name="GRUPO" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Grupo Items.Outputs[Salida de error de origen de Excel].Columns[CATEGORIA]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Importar Ventas a Mongo\Grupo Items.Outputs[Salida de error de origen de Excel].Columns[CATEGORIA]"
                      name="CATEGORIA" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Grupo Items.Outputs[Salida de error de origen de Excel].Columns[DIVISION]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Importar Ventas a Mongo\Grupo Items.Outputs[Salida de error de origen de Excel].Columns[DIVISION]"
                      name="DIVISION" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Grupo Items.Outputs[Salida de error de origen de Excel].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Importar Ventas a Mongo\Grupo Items.Outputs[Salida de error de origen de Excel].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Grupo Items.Outputs[Salida de error de origen de Excel].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Importar Ventas a Mongo\Grupo Items.Outputs[Salida de error de origen de Excel].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Importar Ventas a Mongo\Grupo Items 1"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Origen de Excel;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; Todos los derechos reservados; http://www.microsoft.com/sql/support;1"
              description="Origen de Excel"
              name="Grupo Items 1"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Número de segundos antes de que se agote el tiempo de espera de un comando. Un valor de 0 indica un tiempo de espera infinito."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Especifica el nombre del objeto de base de datos usado para abrir un conjunto de filas."
                  name="OpenRowset">'GRUPO ITEMS$'</property>
                <property
                  dataType="System.String"
                  description="Especifica la variable que contiene el nombre del objeto de base de datos usado para abrir un conjunto de filas."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="Comando SQL para ejecutar."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="Variable que contiene el comando SQL para ejecutar."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Especifica el modo utilizado para obtener acceso a la base de datos."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="La asignación de parámetros del comando SQL a variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Importar Ventas a Mongo\Grupo Items 1.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="La conexión de tiempo de ejecución OLE DB usada para obtener acceso a la base de datos."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Importar Ventas a Mongo\Grupo Items 1.Outputs[Salida de origen de Excel]"
                  name="Salida de origen de Excel">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Grupo Items 1.Outputs[Salida de origen de Excel].Columns[IDGrupo]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Importar Ventas a Mongo\Grupo Items 1.Outputs[Salida de origen de Excel].ExternalColumns[GRUPO]"
                      length="255"
                      lineageId="Package\Importar Ventas a Mongo\Grupo Items 1.Outputs[Salida de origen de Excel].Columns[IDGrupo]"
                      name="IDGrupo"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Grupo Items 1.Outputs[Salida de origen de Excel].Columns[Categoria]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Importar Ventas a Mongo\Grupo Items 1.Outputs[Salida de origen de Excel].ExternalColumns[CATEGORIA]"
                      length="255"
                      lineageId="Package\Importar Ventas a Mongo\Grupo Items 1.Outputs[Salida de origen de Excel].Columns[Categoria]"
                      name="Categoria"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Grupo Items 1.Outputs[Salida de origen de Excel].Columns[Division]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Importar Ventas a Mongo\Grupo Items 1.Outputs[Salida de origen de Excel].ExternalColumns[DIVISION]"
                      length="255"
                      lineageId="Package\Importar Ventas a Mongo\Grupo Items 1.Outputs[Salida de origen de Excel].Columns[Division]"
                      name="Division"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\Grupo Items 1.Outputs[Salida de origen de Excel].ExternalColumns[GRUPO]"
                      dataType="wstr"
                      length="255"
                      name="GRUPO" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\Grupo Items 1.Outputs[Salida de origen de Excel].ExternalColumns[CATEGORIA]"
                      dataType="wstr"
                      length="255"
                      name="CATEGORIA" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\Grupo Items 1.Outputs[Salida de origen de Excel].ExternalColumns[DIVISION]"
                      dataType="wstr"
                      length="255"
                      name="DIVISION" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\Grupo Items 1.Outputs[Salida de origen de Excel].ExternalColumns[F4]"
                      dataType="wstr"
                      length="255"
                      name="F4" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Importar Ventas a Mongo\Grupo Items 1.Outputs[Salida de error de origen de Excel]"
                  isErrorOut="true"
                  name="Salida de error de origen de Excel">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Grupo Items 1.Outputs[Salida de error de origen de Excel].Columns[GRUPO]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Importar Ventas a Mongo\Grupo Items 1.Outputs[Salida de error de origen de Excel].Columns[GRUPO]"
                      name="GRUPO" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Grupo Items 1.Outputs[Salida de error de origen de Excel].Columns[CATEGORIA]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Importar Ventas a Mongo\Grupo Items 1.Outputs[Salida de error de origen de Excel].Columns[CATEGORIA]"
                      name="CATEGORIA" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Grupo Items 1.Outputs[Salida de error de origen de Excel].Columns[DIVISION]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Importar Ventas a Mongo\Grupo Items 1.Outputs[Salida de error de origen de Excel].Columns[DIVISION]"
                      name="DIVISION" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Grupo Items 1.Outputs[Salida de error de origen de Excel].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Importar Ventas a Mongo\Grupo Items 1.Outputs[Salida de error de origen de Excel].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Grupo Items 1.Outputs[Salida de error de origen de Excel].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Importar Ventas a Mongo\Grupo Items 1.Outputs[Salida de error de origen de Excel].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Importar Ventas a Mongo\Items"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Origen de Excel;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; Todos los derechos reservados; http://www.microsoft.com/sql/support;1"
              description="Origen de Excel"
              name="Items"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Número de segundos antes de que se agote el tiempo de espera de un comando. Un valor de 0 indica un tiempo de espera infinito."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Especifica el nombre del objeto de base de datos usado para abrir un conjunto de filas."
                  name="OpenRowset">ITEMS$</property>
                <property
                  dataType="System.String"
                  description="Especifica la variable que contiene el nombre del objeto de base de datos usado para abrir un conjunto de filas."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="Comando SQL para ejecutar."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="Variable que contiene el comando SQL para ejecutar."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Especifica el modo utilizado para obtener acceso a la base de datos."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="La asignación de parámetros del comando SQL a variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Importar Ventas a Mongo\Items.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="La conexión de tiempo de ejecución OLE DB usada para obtener acceso a la base de datos."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Importar Ventas a Mongo\Items.Outputs[Salida de origen de Excel]"
                  name="Salida de origen de Excel">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Items.Outputs[Salida de origen de Excel].Columns[ID]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Importar Ventas a Mongo\Items.Outputs[Salida de origen de Excel].ExternalColumns[ID]"
                      length="255"
                      lineageId="Package\Importar Ventas a Mongo\Items.Outputs[Salida de origen de Excel].Columns[ID]"
                      name="ID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Items.Outputs[Salida de origen de Excel].Columns[IDItem]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Importar Ventas a Mongo\Items.Outputs[Salida de origen de Excel].ExternalColumns[ID Adicional]"
                      length="255"
                      lineageId="Package\Importar Ventas a Mongo\Items.Outputs[Salida de origen de Excel].Columns[IDItem]"
                      name="IDItem"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Items.Outputs[Salida de origen de Excel].Columns[Descripcion]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Importar Ventas a Mongo\Items.Outputs[Salida de origen de Excel].ExternalColumns[Descripcion]"
                      length="255"
                      lineageId="Package\Importar Ventas a Mongo\Items.Outputs[Salida de origen de Excel].Columns[Descripcion]"
                      name="Descripcion"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Items.Outputs[Salida de origen de Excel].Columns[IDGrupo]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Importar Ventas a Mongo\Items.Outputs[Salida de origen de Excel].ExternalColumns[Grupo]"
                      length="255"
                      lineageId="Package\Importar Ventas a Mongo\Items.Outputs[Salida de origen de Excel].Columns[IDGrupo]"
                      name="IDGrupo"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\Items.Outputs[Salida de origen de Excel].ExternalColumns[ID]"
                      dataType="wstr"
                      length="255"
                      name="ID" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\Items.Outputs[Salida de origen de Excel].ExternalColumns[ID Adicional]"
                      dataType="wstr"
                      length="255"
                      name="ID Adicional" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\Items.Outputs[Salida de origen de Excel].ExternalColumns[Descripcion]"
                      dataType="wstr"
                      length="255"
                      name="Descripcion" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\Items.Outputs[Salida de origen de Excel].ExternalColumns[Grupo]"
                      dataType="wstr"
                      length="255"
                      name="Grupo" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\Items.Outputs[Salida de origen de Excel].ExternalColumns[F5]"
                      dataType="wstr"
                      length="255"
                      name="F5" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\Items.Outputs[Salida de origen de Excel].ExternalColumns[F6]"
                      dataType="wstr"
                      length="255"
                      name="F6" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Importar Ventas a Mongo\Items.Outputs[Salida de error de origen de Excel]"
                  isErrorOut="true"
                  name="Salida de error de origen de Excel">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Items.Outputs[Salida de error de origen de Excel].Columns[ID]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Importar Ventas a Mongo\Items.Outputs[Salida de error de origen de Excel].Columns[ID]"
                      name="ID" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Items.Outputs[Salida de error de origen de Excel].Columns[ID Adicional]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Importar Ventas a Mongo\Items.Outputs[Salida de error de origen de Excel].Columns[ID Adicional]"
                      name="ID Adicional" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Items.Outputs[Salida de error de origen de Excel].Columns[Descripcion]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Importar Ventas a Mongo\Items.Outputs[Salida de error de origen de Excel].Columns[Descripcion]"
                      name="Descripcion" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Items.Outputs[Salida de error de origen de Excel].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Importar Ventas a Mongo\Items.Outputs[Salida de error de origen de Excel].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Items.Outputs[Salida de error de origen de Excel].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Importar Ventas a Mongo\Items.Outputs[Salida de error de origen de Excel].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Items.Outputs[Salida de error de origen de Excel].Columns[Grupo]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Importar Ventas a Mongo\Items.Outputs[Salida de error de origen de Excel].Columns[Grupo]"
                      name="Grupo" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Importar Ventas a Mongo\Items 1"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Origen de Excel;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; Todos los derechos reservados; http://www.microsoft.com/sql/support;1"
              description="Origen de Excel"
              name="Items 1"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Número de segundos antes de que se agote el tiempo de espera de un comando. Un valor de 0 indica un tiempo de espera infinito."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Especifica el nombre del objeto de base de datos usado para abrir un conjunto de filas."
                  name="OpenRowset">ITEMS$</property>
                <property
                  dataType="System.String"
                  description="Especifica la variable que contiene el nombre del objeto de base de datos usado para abrir un conjunto de filas."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="Comando SQL para ejecutar."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="Variable que contiene el comando SQL para ejecutar."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Especifica el modo utilizado para obtener acceso a la base de datos."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="La asignación de parámetros del comando SQL a variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Importar Ventas a Mongo\Items 1.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="La conexión de tiempo de ejecución OLE DB usada para obtener acceso a la base de datos."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Importar Ventas a Mongo\Items 1.Outputs[Salida de origen de Excel]"
                  name="Salida de origen de Excel">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Items 1.Outputs[Salida de origen de Excel].Columns[ID]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Importar Ventas a Mongo\Items 1.Outputs[Salida de origen de Excel].ExternalColumns[ID]"
                      length="255"
                      lineageId="Package\Importar Ventas a Mongo\Items 1.Outputs[Salida de origen de Excel].Columns[ID]"
                      name="ID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Items 1.Outputs[Salida de origen de Excel].Columns[IDItem]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Importar Ventas a Mongo\Items 1.Outputs[Salida de origen de Excel].ExternalColumns[ID Adicional]"
                      length="255"
                      lineageId="Package\Importar Ventas a Mongo\Items 1.Outputs[Salida de origen de Excel].Columns[IDItem]"
                      name="IDItem"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Items 1.Outputs[Salida de origen de Excel].Columns[Descripcion]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Importar Ventas a Mongo\Items 1.Outputs[Salida de origen de Excel].ExternalColumns[Descripcion]"
                      length="255"
                      lineageId="Package\Importar Ventas a Mongo\Items 1.Outputs[Salida de origen de Excel].Columns[Descripcion]"
                      name="Descripcion"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Items 1.Outputs[Salida de origen de Excel].Columns[IDGrupo]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Importar Ventas a Mongo\Items 1.Outputs[Salida de origen de Excel].ExternalColumns[Grupo]"
                      length="255"
                      lineageId="Package\Importar Ventas a Mongo\Items 1.Outputs[Salida de origen de Excel].Columns[IDGrupo]"
                      name="IDGrupo"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\Items 1.Outputs[Salida de origen de Excel].ExternalColumns[ID]"
                      dataType="wstr"
                      length="255"
                      name="ID" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\Items 1.Outputs[Salida de origen de Excel].ExternalColumns[ID Adicional]"
                      dataType="wstr"
                      length="255"
                      name="ID Adicional" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\Items 1.Outputs[Salida de origen de Excel].ExternalColumns[Descripcion]"
                      dataType="wstr"
                      length="255"
                      name="Descripcion" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\Items 1.Outputs[Salida de origen de Excel].ExternalColumns[Grupo]"
                      dataType="wstr"
                      length="255"
                      name="Grupo" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\Items 1.Outputs[Salida de origen de Excel].ExternalColumns[F5]"
                      dataType="wstr"
                      length="255"
                      name="F5" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\Items 1.Outputs[Salida de origen de Excel].ExternalColumns[F6]"
                      dataType="wstr"
                      length="255"
                      name="F6" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Importar Ventas a Mongo\Items 1.Outputs[Salida de error de origen de Excel]"
                  isErrorOut="true"
                  name="Salida de error de origen de Excel">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Items 1.Outputs[Salida de error de origen de Excel].Columns[ID]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Importar Ventas a Mongo\Items 1.Outputs[Salida de error de origen de Excel].Columns[ID]"
                      name="ID" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Items 1.Outputs[Salida de error de origen de Excel].Columns[ID Adicional]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Importar Ventas a Mongo\Items 1.Outputs[Salida de error de origen de Excel].Columns[ID Adicional]"
                      name="ID Adicional" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Items 1.Outputs[Salida de error de origen de Excel].Columns[Descripcion]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Importar Ventas a Mongo\Items 1.Outputs[Salida de error de origen de Excel].Columns[Descripcion]"
                      name="Descripcion" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Items 1.Outputs[Salida de error de origen de Excel].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Importar Ventas a Mongo\Items 1.Outputs[Salida de error de origen de Excel].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Items 1.Outputs[Salida de error de origen de Excel].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Importar Ventas a Mongo\Items 1.Outputs[Salida de error de origen de Excel].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Items 1.Outputs[Salida de error de origen de Excel].Columns[Grupo]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Importar Ventas a Mongo\Items 1.Outputs[Salida de error de origen de Excel].Columns[Grupo]"
                      name="Grupo" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Importar Ventas a Mongo\Items 1 1"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Origen de Excel;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; Todos los derechos reservados; http://www.microsoft.com/sql/support;1"
              description="Origen de Excel"
              name="Items 1 1"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Número de segundos antes de que se agote el tiempo de espera de un comando. Un valor de 0 indica un tiempo de espera infinito."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Especifica el nombre del objeto de base de datos usado para abrir un conjunto de filas."
                  name="OpenRowset">ITEMS$</property>
                <property
                  dataType="System.String"
                  description="Especifica la variable que contiene el nombre del objeto de base de datos usado para abrir un conjunto de filas."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="Comando SQL para ejecutar."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="Variable que contiene el comando SQL para ejecutar."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Especifica el modo utilizado para obtener acceso a la base de datos."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="La asignación de parámetros del comando SQL a variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Importar Ventas a Mongo\Items 1 1.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="La conexión de tiempo de ejecución OLE DB usada para obtener acceso a la base de datos."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Importar Ventas a Mongo\Items 1 1.Outputs[Salida de origen de Excel]"
                  name="Salida de origen de Excel">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Items 1 1.Outputs[Salida de origen de Excel].Columns[ID]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Importar Ventas a Mongo\Items 1 1.Outputs[Salida de origen de Excel].ExternalColumns[ID]"
                      length="255"
                      lineageId="Package\Importar Ventas a Mongo\Items 1 1.Outputs[Salida de origen de Excel].Columns[ID]"
                      name="ID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Items 1 1.Outputs[Salida de origen de Excel].Columns[IDItem]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Importar Ventas a Mongo\Items 1 1.Outputs[Salida de origen de Excel].ExternalColumns[ID Adicional]"
                      length="255"
                      lineageId="Package\Importar Ventas a Mongo\Items 1 1.Outputs[Salida de origen de Excel].Columns[IDItem]"
                      name="IDItem"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Items 1 1.Outputs[Salida de origen de Excel].Columns[Descripcion]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Importar Ventas a Mongo\Items 1 1.Outputs[Salida de origen de Excel].ExternalColumns[Descripcion]"
                      length="255"
                      lineageId="Package\Importar Ventas a Mongo\Items 1 1.Outputs[Salida de origen de Excel].Columns[Descripcion]"
                      name="Descripcion"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Items 1 1.Outputs[Salida de origen de Excel].Columns[IDGrupo]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversión"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Importar Ventas a Mongo\Items 1 1.Outputs[Salida de origen de Excel].ExternalColumns[Grupo]"
                      length="255"
                      lineageId="Package\Importar Ventas a Mongo\Items 1 1.Outputs[Salida de origen de Excel].Columns[IDGrupo]"
                      name="IDGrupo"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\Items 1 1.Outputs[Salida de origen de Excel].ExternalColumns[ID]"
                      dataType="wstr"
                      length="255"
                      name="ID" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\Items 1 1.Outputs[Salida de origen de Excel].ExternalColumns[ID Adicional]"
                      dataType="wstr"
                      length="255"
                      name="ID Adicional" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\Items 1 1.Outputs[Salida de origen de Excel].ExternalColumns[Descripcion]"
                      dataType="wstr"
                      length="255"
                      name="Descripcion" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\Items 1 1.Outputs[Salida de origen de Excel].ExternalColumns[Grupo]"
                      dataType="wstr"
                      length="255"
                      name="Grupo" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\Items 1 1.Outputs[Salida de origen de Excel].ExternalColumns[F5]"
                      dataType="wstr"
                      length="255"
                      name="F5" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\Items 1 1.Outputs[Salida de origen de Excel].ExternalColumns[F6]"
                      dataType="wstr"
                      length="255"
                      name="F6" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Importar Ventas a Mongo\Items 1 1.Outputs[Salida de error de origen de Excel]"
                  isErrorOut="true"
                  name="Salida de error de origen de Excel">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Items 1 1.Outputs[Salida de error de origen de Excel].Columns[ID]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Importar Ventas a Mongo\Items 1 1.Outputs[Salida de error de origen de Excel].Columns[ID]"
                      name="ID" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Items 1 1.Outputs[Salida de error de origen de Excel].Columns[ID Adicional]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Importar Ventas a Mongo\Items 1 1.Outputs[Salida de error de origen de Excel].Columns[ID Adicional]"
                      name="ID Adicional" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Items 1 1.Outputs[Salida de error de origen de Excel].Columns[Descripcion]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Importar Ventas a Mongo\Items 1 1.Outputs[Salida de error de origen de Excel].Columns[Descripcion]"
                      name="Descripcion" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Items 1 1.Outputs[Salida de error de origen de Excel].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Importar Ventas a Mongo\Items 1 1.Outputs[Salida de error de origen de Excel].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Items 1 1.Outputs[Salida de error de origen de Excel].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Importar Ventas a Mongo\Items 1 1.Outputs[Salida de error de origen de Excel].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Items 1 1.Outputs[Salida de error de origen de Excel].Columns[Grupo]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Importar Ventas a Mongo\Items 1 1.Outputs[Salida de error de origen de Excel].Columns[Grupo]"
                      name="Grupo" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Importar Ventas a Mongo\JSON Generator Transform"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="JSON Generator Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
              description="The JSON generator transform can be used to create JSON document from single or multiple inputs. You can create simple or nested JSON document."
              name="JSON Generator Transform"
              version="5">
              <properties>
                <property
                  dataType="System.Int32"
                  description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                  expressionType="Notify"
                  name="LoggingMode"
                  typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack140, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                <property
                  dataType="System.Boolean"
                  description="When you enable this property it will prefix timestamp before Log messages."
                  expressionType="Notify"
                  name="PrefixTimestamp">false</property>
                <property
                  dataType="System.Null"
                  expressionType="Notify"
                  name="SelfRef"
                  typeConverter="NOTBROWSABLE" />
                <property
                  dataType="System.Int32"
                  description="Determines JSON format and output mode (e.g. one JSON for all input rows or one JSON for each input row)"
                  expressionType="Notify"
                  name="OutputMode"
                  typeConverter="ZappySys.PowerPack.Transform.JsonGeneratorTransform.JsonOutputMode, ZappySys.PowerPack140, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">2</property>
                <property
                  dataType="System.String"
                  description="Defines shape of output JSON string"
                  expressionType="Notify"
                  name="LayoutInfo">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;settings ver="3"&gt;
  &lt;dataset id="facturas" main="True" inputid="768" readfrominput="True"&gt;&lt;/dataset&gt;
  &lt;dataset id="items" inputid="755" readfrominput="True"&gt;&lt;/dataset&gt;
  &lt;dataset id="grupoitems" inputid="762" readfrominput="True"&gt;&lt;/dataset&gt;
  &lt;join parentid="facturas" childid="items"&gt;
    &lt;key parent="idItem" child="IDItem" /&gt;
  &lt;/join&gt;
  &lt;join parentid="items" childid="grupoitems"&gt;
    &lt;key parent="IDGrupo" child="IDGrupo" /&gt;
  &lt;/join&gt;
  &lt;map src="idFactura" name="idFactura" /&gt;
  &lt;map src="fecha" name="fecha" /&gt;
  &lt;map src="fechaVencimiento" name="fechaVencimiento" /&gt;
  &lt;map src="idCliente" name="idCliente" /&gt;
  &lt;map src="idItem" name="idItem" datatype="String" /&gt;
  &lt;map name="item" dataset="items" parentdataset="facturas" maptype="DocArray"&gt;
    &lt;map src="IDItem" name="idItem" datatype="String" /&gt;
    &lt;map src="ID" name="idItemAdicional" datatype="String" /&gt;
    &lt;map src="Descripcion" name="descripcion" /&gt;
    &lt;map name="grupo" dataset="grupoitems" parentdataset="items" maptype="DocArray"&gt;
      &lt;map src="IDGrupo" name="idGrupo" /&gt;
      &lt;map src="Categoria" name="categoria" /&gt;
      &lt;map src="Division" name="division" /&gt;
    &lt;/map&gt;
  &lt;/map&gt;
  &lt;map src="cantidad" name="cantidad" /&gt;
  &lt;map src="moneda" name="moneda" /&gt;
  &lt;map src="precio" name="precio" /&gt;
  &lt;map src="total" name="total" /&gt;
  &lt;map src="almacén" name="almacén" /&gt;
  &lt;map src="idVendedor" name="idVendedor" /&gt;
  &lt;map src="totalUSD" name="totalUSD" /&gt;
  &lt;map src="impuesto" name="impuesto" /&gt;
  &lt;map src="impuestoUSD" name="impuestoUSD" /&gt;
  &lt;map src="tipoCambio" name="tipoCambio" /&gt;
  &lt;map src="ganacia" name="ganacia" /&gt;
  &lt;map src="gananciaUSD" name="gananciaUSD" /&gt;
&lt;/settings&gt;</property>
                <property
                  dataType="System.Boolean"
                  description="Do not output attribute if value is NULL. By default null attribute is output as &quot;MyColname&quot; : null "
                  expressionType="Notify"
                  name="DoNotOutputNullAttribute">false</property>
                <property
                  dataType="System.Boolean"
                  description="Set this option to True if you dont want to output empty nodes of sub document (e.g nested property). This option is only applicable if you enabled DoNotOutputNullProperty. If all child peoprties are NULL for parent node then by default output contains empty nodes (e.g. CountryInfo: { CityInfo: { } } for Json --OR-- &lt;CountryInfo&gt;&lt;CityInfo /&gt;&lt;/CountryInfo&gt; for Xml). You can enable this option to avoid such empty nodes from the output."
                  expressionType="Notify"
                  name="DoNotOutputEmptyNestedAttribute">false</property>
                <property
                  dataType="System.Boolean"
                  description="Set this option to True if you dont want to output empty array nodes when no record found for that array (e.g. &quot;Orders&quot;: [ ] for JSON --OR-- &lt;Orders&gt;&lt;/Orders&gt; for Xml). You can enable this option to avoid such empty nodes from the output."
                  expressionType="Notify"
                  name="DoNotOutputEmptyArrayAttribute">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indent JSON Text generated by this transform (Pretty Print)"
                  expressionType="Notify"
                  name="IndentOutput">false</property>
                <property
                  dataType="System.String"
                  description="Default output format for datetime columns"
                  expressionType="Notify"
                  name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                <property
                  dataType="System.String"
                  description="Culture setting for this task. This option is useful to control output format for certain data types (e.g. number, decimal) based on regional settings. In USA dot is used for decimal indicator but in Germany it may be comma. Leave this blank if you want to use system default settings."
                  expressionType="Notify"
                  name="Culture"></property>
                <property
                  dataType="System.Boolean"
                  description="Document Header/Footer text come from upstream column rather than direct string"
                  expressionType="Notify"
                  name="UseColumnForHeaderFooter">false</property>
                <property
                  dataType="System.String"
                  description="Header text for document (Added before each document in the output)"
                  expressionType="Notify"
                  name="DocumentHeader"></property>
                <property
                  dataType="System.String"
                  description="Footer text for document (Added after each document in the output)"
                  expressionType="Notify"
                  name="DocumentFooter"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies how many rows to include in each batch (Array records for single dataset array mode). 0=Include all in one batch. This setting is only valid for Mode=[Single Dataset Array]"
                  expressionType="Notify"
                  name="ArrayBatchSize">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies encoding for data. If you set CharacterSet property then Encoing is ignored."
                  expressionType="Notify"
                  name="Encoding"
                  typeConverter="ZappySys.Common.EncodingType, ZappySys.Common, Version=1.0.2019.11015, Culture=neutral, PublicKeyToken=1903265a93eae502">2</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">ZappySys.JsonGeneratorTransform</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Importar Ventas a Mongo\JSON Generator Transform.Inputs[JsonInput1]"
                  name="JsonInput1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Id for attached dataset with input. Use JSON Layout Editor to see attached dataset"
                      expressionType="Notify"
                      name="DatasetInputId">755</property>
                  </properties>
                  <inputColumns>
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\JSON Generator Transform.Inputs[JsonInput1].Columns[ID]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="ID"
                      lineageId="Package\Importar Ventas a Mongo\Items 1.Outputs[Salida de origen de Excel].Columns[ID]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\JSON Generator Transform.Inputs[JsonInput1].Columns[IDItem]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="IDItem"
                      lineageId="Package\Importar Ventas a Mongo\Items 1.Outputs[Salida de origen de Excel].Columns[IDItem]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\JSON Generator Transform.Inputs[JsonInput1].Columns[Descripcion]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Descripcion"
                      lineageId="Package\Importar Ventas a Mongo\Items 1.Outputs[Salida de origen de Excel].Columns[Descripcion]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\JSON Generator Transform.Inputs[JsonInput1].Columns[IDGrupo]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="IDGrupo"
                      lineageId="Package\Importar Ventas a Mongo\Items 1.Outputs[Salida de origen de Excel].Columns[IDGrupo]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Importar Ventas a Mongo\JSON Generator Transform.Inputs[JsonInput2]"
                  name="JsonInput2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Id for attached dataset with input. Use JSON Layout Editor to see attached dataset"
                      expressionType="Notify"
                      name="DatasetInputId">762</property>
                  </properties>
                  <inputColumns>
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\JSON Generator Transform.Inputs[JsonInput2].Columns[IDGrupo]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="IDGrupo"
                      lineageId="Package\Importar Ventas a Mongo\Grupo Items.Outputs[Salida de origen de Excel].Columns[IDGrupo]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\JSON Generator Transform.Inputs[JsonInput2].Columns[Categoria]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Categoria"
                      lineageId="Package\Importar Ventas a Mongo\Grupo Items.Outputs[Salida de origen de Excel].Columns[Categoria]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\JSON Generator Transform.Inputs[JsonInput2].Columns[Division]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Division"
                      lineageId="Package\Importar Ventas a Mongo\Grupo Items.Outputs[Salida de origen de Excel].Columns[Division]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Importar Ventas a Mongo\JSON Generator Transform.Inputs[JsonInput3]"
                  name="JsonInput3">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Id for attached dataset with input. Use JSON Layout Editor to see attached dataset"
                      expressionType="Notify"
                      name="DatasetInputId">768</property>
                  </properties>
                  <inputColumns>
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\JSON Generator Transform.Inputs[JsonInput3].Columns[idFactura]"
                      cachedDataType="wstr"
                      cachedLength="36"
                      cachedName="idFactura"
                      lineageId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[idFactura]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\JSON Generator Transform.Inputs[JsonInput3].Columns[fecha]"
                      cachedDataType="date"
                      cachedName="fecha"
                      lineageId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[fecha]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\JSON Generator Transform.Inputs[JsonInput3].Columns[fechaVencimiento]"
                      cachedDataType="date"
                      cachedName="fechaVencimiento"
                      lineageId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[fechaVencimiento]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\JSON Generator Transform.Inputs[JsonInput3].Columns[idCliente]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="idCliente"
                      lineageId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[idCliente]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\JSON Generator Transform.Inputs[JsonInput3].Columns[idItem]"
                      cachedDataType="wstr"
                      cachedLength="28"
                      cachedName="idItem"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[idItem]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\JSON Generator Transform.Inputs[JsonInput3].Columns[cantidad]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="cantidad"
                      lineageId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[cantidad]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\JSON Generator Transform.Inputs[JsonInput3].Columns[precio]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="precio"
                      lineageId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[precio]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\JSON Generator Transform.Inputs[JsonInput3].Columns[total]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="total"
                      lineageId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[total]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\JSON Generator Transform.Inputs[JsonInput3].Columns[almacén]"
                      cachedDataType="wstr"
                      cachedLength="8"
                      cachedName="almacén"
                      lineageId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[almacén]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\JSON Generator Transform.Inputs[JsonInput3].Columns[idVendedor]"
                      cachedDataType="wstr"
                      cachedLength="8"
                      cachedName="idVendedor"
                      lineageId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[idVendedor]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\JSON Generator Transform.Inputs[JsonInput3].Columns[totalUSD]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="totalUSD"
                      lineageId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[totalUSD]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\JSON Generator Transform.Inputs[JsonInput3].Columns[impuesto]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="impuesto"
                      lineageId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[impuesto]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\JSON Generator Transform.Inputs[JsonInput3].Columns[impuestoUSD]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="impuestoUSD"
                      lineageId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[impuestoUSD]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\JSON Generator Transform.Inputs[JsonInput3].Columns[tipoCambio]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="tipoCambio"
                      lineageId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[tipoCambio]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\JSON Generator Transform.Inputs[JsonInput3].Columns[ganacia]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="ganacia"
                      lineageId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[ganacia]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\JSON Generator Transform.Inputs[JsonInput3].Columns[gananciaUSD]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="gananciaUSD"
                      lineageId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[gananciaUSD]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\JSON Generator Transform.Inputs[JsonInput3].Columns[idItemExistente]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="idItemExistente"
                      lineageId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[idItemExistente]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\JSON Generator Transform.Inputs[JsonInput3].Columns[moneda]"
                      cachedDataType="wstr"
                      cachedLength="12"
                      cachedName="moneda"
                      lineageId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[moneda]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Importar Ventas a Mongo\JSON Generator Transform.Inputs[JsonInput4]"
                  name="JsonInput4">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Importar Ventas a Mongo\JSON Generator Transform.Outputs[JsonGeneratorTransformOutput]"
                  errorOrTruncationOperation="Error"
                  name="JsonGeneratorTransformOutput">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\JSON Generator Transform.Outputs[JsonGeneratorTransformOutput].Columns[ZS_JSON_OUT]"
                      dataType="nText"
                      description="This output column contains generated JSON string from JSON generator Transform"
                      lineageId="Package\Importar Ventas a Mongo\JSON Generator Transform.Outputs[JsonGeneratorTransformOutput].Columns[ZS_JSON_OUT]"
                      name="ZS_JSON_OUT" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Importar Ventas a Mongo\JSON Generator Transform 1"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="JSON Generator Transform; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
              description="The JSON generator transform can be used to create JSON document from single or multiple inputs. You can create simple or nested JSON document."
              name="JSON Generator Transform 1"
              version="5">
              <properties>
                <property
                  dataType="System.Int32"
                  description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                  expressionType="Notify"
                  name="LoggingMode"
                  typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack140, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                <property
                  dataType="System.Boolean"
                  description="When you enable this property it will prefix timestamp before Log messages."
                  expressionType="Notify"
                  name="PrefixTimestamp">false</property>
                <property
                  dataType="System.Null"
                  expressionType="Notify"
                  name="SelfRef"
                  typeConverter="NOTBROWSABLE" />
                <property
                  dataType="System.Int32"
                  description="Determines JSON format and output mode (e.g. one JSON for all input rows or one JSON for each input row)"
                  expressionType="Notify"
                  name="OutputMode"
                  typeConverter="ZappySys.PowerPack.Transform.JsonGeneratorTransform.JsonOutputMode, ZappySys.PowerPack140, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">2</property>
                <property
                  dataType="System.String"
                  description="Defines shape of output JSON string"
                  expressionType="Notify"
                  name="LayoutInfo">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;settings ver="3"&gt;
  &lt;dataset id="facturas" main="True" inputid="846" readfrominput="True"&gt;&lt;/dataset&gt;
  &lt;dataset id="items" inputid="963" readfrominput="True"&gt;&lt;/dataset&gt;
  &lt;dataset id="grupoitems" inputid="970" readfrominput="True"&gt;&lt;/dataset&gt;
  &lt;join parentid="facturas" childid="items"&gt;
    &lt;key parent="idItem" child="IDItem" /&gt;
  &lt;/join&gt;
  &lt;join parentid="items" childid="grupoitems"&gt;
    &lt;key parent="IDGrupo" child="IDGrupo" /&gt;
  &lt;/join&gt;
  &lt;map src="idFactura" name="idFactura" /&gt;
  &lt;map src="fecha" name="fecha" /&gt;
  &lt;map src="fechaVencimiento" name="fechaVencimiento" /&gt;
  &lt;map src="idCliente" name="idCliente" /&gt;
  &lt;map src="idItem" name="idItem" datatype="String" /&gt;
  &lt;map name="item" dataset="items" parentdataset="facturas" maptype="DocArray"&gt;
    &lt;map src="IDItem" name="idItem" datatype="String" /&gt;
    &lt;map src="ID" name="idItemAdicional" datatype="String" /&gt;
    &lt;map src="Descripcion" name="descripcion" datatype="String" /&gt;
    &lt;map name="grupo" dataset="grupoitems" parentdataset="items" maptype="DocArray"&gt;
      &lt;map src="IDGrupo" name="idGrupo" datatype="String" /&gt;
      &lt;map src="Categoria" name="categoria" datatype="String" /&gt;
      &lt;map src="Division" name="division" datatype="String" /&gt;
    &lt;/map&gt;
  &lt;/map&gt;
  &lt;map src="cantidad" name="cantidad" /&gt;
  &lt;map src="moneda" name="moneda" /&gt;
  &lt;map src="precio" name="precio" /&gt;
  &lt;map src="total" name="total" /&gt;
  &lt;map src="almacén" name="almacén" /&gt;
  &lt;map src="idVendedor" name="idVendedor" /&gt;
  &lt;map src="totalUSD" name="totalUSD" /&gt;
  &lt;map src="impuesto" name="impuesto" /&gt;
  &lt;map src="impuestoUSD" name="impuestoUSD" /&gt;
  &lt;map src="tipoCambio" name="tipoCambio" /&gt;
  &lt;map src="ganacia" name="ganacia" /&gt;
  &lt;map src="gananciaUSD" name="gananciaUSD" /&gt;
  &lt;map src="idItemNoReconocido" name="idItemNoReconocido" /&gt;
&lt;/settings&gt;</property>
                <property
                  dataType="System.Boolean"
                  description="Do not output attribute if value is NULL. By default null attribute is output as &quot;MyColname&quot; : null "
                  expressionType="Notify"
                  name="DoNotOutputNullAttribute">false</property>
                <property
                  dataType="System.Boolean"
                  description="Set this option to True if you dont want to output empty nodes of sub document (e.g nested property). This option is only applicable if you enabled DoNotOutputNullProperty. If all child peoprties are NULL for parent node then by default output contains empty nodes (e.g. CountryInfo: { CityInfo: { } } for Json --OR-- &lt;CountryInfo&gt;&lt;CityInfo /&gt;&lt;/CountryInfo&gt; for Xml). You can enable this option to avoid such empty nodes from the output."
                  expressionType="Notify"
                  name="DoNotOutputEmptyNestedAttribute">false</property>
                <property
                  dataType="System.Boolean"
                  description="Set this option to True if you dont want to output empty array nodes when no record found for that array (e.g. &quot;Orders&quot;: [ ] for JSON --OR-- &lt;Orders&gt;&lt;/Orders&gt; for Xml). You can enable this option to avoid such empty nodes from the output."
                  expressionType="Notify"
                  name="DoNotOutputEmptyArrayAttribute">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indent JSON Text generated by this transform (Pretty Print)"
                  expressionType="Notify"
                  name="IndentOutput">false</property>
                <property
                  dataType="System.String"
                  description="Default output format for datetime columns"
                  expressionType="Notify"
                  name="DateTimeFormat">yyyy-MM-dd HH:mm:ss</property>
                <property
                  dataType="System.String"
                  description="Culture setting for this task. This option is useful to control output format for certain data types (e.g. number, decimal) based on regional settings. In USA dot is used for decimal indicator but in Germany it may be comma. Leave this blank if you want to use system default settings."
                  expressionType="Notify"
                  name="Culture"></property>
                <property
                  dataType="System.Boolean"
                  description="Document Header/Footer text come from upstream column rather than direct string"
                  expressionType="Notify"
                  name="UseColumnForHeaderFooter">false</property>
                <property
                  dataType="System.String"
                  description="Header text for document (Added before each document in the output)"
                  expressionType="Notify"
                  name="DocumentHeader"></property>
                <property
                  dataType="System.String"
                  description="Footer text for document (Added after each document in the output)"
                  expressionType="Notify"
                  name="DocumentFooter"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies how many rows to include in each batch (Array records for single dataset array mode). 0=Include all in one batch. This setting is only valid for Mode=[Single Dataset Array]"
                  expressionType="Notify"
                  name="ArrayBatchSize">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies encoding for data. If you set CharacterSet property then Encoing is ignored."
                  expressionType="Notify"
                  name="Encoding"
                  typeConverter="ZappySys.Common.EncodingType, ZappySys.Common, Version=1.0.2019.11015, Culture=neutral, PublicKeyToken=1903265a93eae502">2</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">ZappySys.JsonGeneratorTransform</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Importar Ventas a Mongo\JSON Generator Transform 1.Inputs[JsonInput1]"
                  name="JsonInput1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Id for attached dataset with input. Use JSON Layout Editor to see attached dataset"
                      expressionType="Notify"
                      name="DatasetInputId">846</property>
                  </properties>
                  <inputColumns>
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\JSON Generator Transform 1.Inputs[JsonInput1].Columns[idFactura]"
                      cachedDataType="wstr"
                      cachedLength="36"
                      cachedName="idFactura"
                      lineageId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[idFactura]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\JSON Generator Transform 1.Inputs[JsonInput1].Columns[fecha]"
                      cachedDataType="date"
                      cachedName="fecha"
                      lineageId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[fecha]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\JSON Generator Transform 1.Inputs[JsonInput1].Columns[fechaVencimiento]"
                      cachedDataType="date"
                      cachedName="fechaVencimiento"
                      lineageId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[fechaVencimiento]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\JSON Generator Transform 1.Inputs[JsonInput1].Columns[idCliente]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="idCliente"
                      lineageId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[idCliente]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\JSON Generator Transform 1.Inputs[JsonInput1].Columns[idItem]"
                      cachedDataType="wstr"
                      cachedLength="28"
                      cachedName="idItem"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[idItem]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\JSON Generator Transform 1.Inputs[JsonInput1].Columns[cantidad]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="cantidad"
                      lineageId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[cantidad]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\JSON Generator Transform 1.Inputs[JsonInput1].Columns[precio]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="precio"
                      lineageId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[precio]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\JSON Generator Transform 1.Inputs[JsonInput1].Columns[total]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="total"
                      lineageId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[total]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\JSON Generator Transform 1.Inputs[JsonInput1].Columns[almacén]"
                      cachedDataType="wstr"
                      cachedLength="8"
                      cachedName="almacén"
                      lineageId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[almacén]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\JSON Generator Transform 1.Inputs[JsonInput1].Columns[idVendedor]"
                      cachedDataType="wstr"
                      cachedLength="8"
                      cachedName="idVendedor"
                      lineageId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[idVendedor]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\JSON Generator Transform 1.Inputs[JsonInput1].Columns[totalUSD]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="totalUSD"
                      lineageId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[totalUSD]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\JSON Generator Transform 1.Inputs[JsonInput1].Columns[impuesto]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="impuesto"
                      lineageId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[impuesto]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\JSON Generator Transform 1.Inputs[JsonInput1].Columns[impuestoUSD]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="impuestoUSD"
                      lineageId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[impuestoUSD]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\JSON Generator Transform 1.Inputs[JsonInput1].Columns[tipoCambio]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="tipoCambio"
                      lineageId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[tipoCambio]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\JSON Generator Transform 1.Inputs[JsonInput1].Columns[ganacia]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="ganacia"
                      lineageId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[ganacia]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\JSON Generator Transform 1.Inputs[JsonInput1].Columns[gananciaUSD]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="gananciaUSD"
                      lineageId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[gananciaUSD]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\JSON Generator Transform 1.Inputs[JsonInput1].Columns[idItemExistente]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="idItemExistente"
                      lineageId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[idItemExistente]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\JSON Generator Transform 1.Inputs[JsonInput1].Columns[moneda]"
                      cachedDataType="wstr"
                      cachedLength="12"
                      cachedName="moneda"
                      lineageId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla].Columns[moneda]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\JSON Generator Transform 1.Inputs[JsonInput1].Columns[idItemNoReconocido]"
                      cachedDataType="i4"
                      cachedName="idItemNoReconocido"
                      lineageId="Package\Importar Ventas a Mongo\Columna derivada.Outputs[Salida de columna derivada].Columns[idItemNoReconocido]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Importar Ventas a Mongo\JSON Generator Transform 1.Inputs[JsonInput2]"
                  name="JsonInput2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Id for attached dataset with input. Use JSON Layout Editor to see attached dataset"
                      expressionType="Notify"
                      name="DatasetInputId">963</property>
                  </properties>
                  <inputColumns>
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\JSON Generator Transform 1.Inputs[JsonInput2].Columns[ID]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="ID"
                      lineageId="Package\Importar Ventas a Mongo\Items 1 1.Outputs[Salida de origen de Excel].Columns[ID]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\JSON Generator Transform 1.Inputs[JsonInput2].Columns[IDItem]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="IDItem"
                      lineageId="Package\Importar Ventas a Mongo\Items 1 1.Outputs[Salida de origen de Excel].Columns[IDItem]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\JSON Generator Transform 1.Inputs[JsonInput2].Columns[Descripcion]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Descripcion"
                      lineageId="Package\Importar Ventas a Mongo\Items 1 1.Outputs[Salida de origen de Excel].Columns[Descripcion]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\JSON Generator Transform 1.Inputs[JsonInput2].Columns[IDGrupo]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="IDGrupo"
                      lineageId="Package\Importar Ventas a Mongo\Items 1 1.Outputs[Salida de origen de Excel].Columns[IDGrupo]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Importar Ventas a Mongo\JSON Generator Transform 1.Inputs[JsonInput3]"
                  name="JsonInput3">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Id for attached dataset with input. Use JSON Layout Editor to see attached dataset"
                      expressionType="Notify"
                      name="DatasetInputId">970</property>
                  </properties>
                  <inputColumns>
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\JSON Generator Transform 1.Inputs[JsonInput3].Columns[IDGrupo]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="IDGrupo"
                      lineageId="Package\Importar Ventas a Mongo\Grupo Items 1.Outputs[Salida de origen de Excel].Columns[IDGrupo]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\JSON Generator Transform 1.Inputs[JsonInput3].Columns[Categoria]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Categoria"
                      lineageId="Package\Importar Ventas a Mongo\Grupo Items 1.Outputs[Salida de origen de Excel].Columns[Categoria]" />
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\JSON Generator Transform 1.Inputs[JsonInput3].Columns[Division]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Division"
                      lineageId="Package\Importar Ventas a Mongo\Grupo Items 1.Outputs[Salida de origen de Excel].Columns[Division]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Importar Ventas a Mongo\JSON Generator Transform 1.Inputs[JsonInput4]"
                  name="JsonInput4">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Importar Ventas a Mongo\JSON Generator Transform 1.Outputs[JsonGeneratorTransformOutput]"
                  errorOrTruncationOperation="Error"
                  name="JsonGeneratorTransformOutput">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\JSON Generator Transform 1.Outputs[JsonGeneratorTransformOutput].Columns[ZS_JSON_OUT]"
                      dataType="nText"
                      description="This output column contains generated JSON string from JSON generator Transform"
                      lineageId="Package\Importar Ventas a Mongo\JSON Generator Transform 1.Outputs[JsonGeneratorTransformOutput].Columns[ZS_JSON_OUT]"
                      name="ZS_JSON_OUT" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Importar Ventas a Mongo\mongo 101-200"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="JSON Source (REST API or File); ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
              description="The JSON source is used to read data from JSON files, RESTful Web Service or direct JSON String."
              name="mongo 101-200"
              usesDispositions="true"
              version="32">
              <properties>
                <property
                  dataType="System.Int32"
                  description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                  expressionType="Notify"
                  name="LoggingMode"
                  typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack140, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                <property
                  dataType="System.Boolean"
                  description="When you enable this property it will prefix timestamp before Log messages."
                  expressionType="Notify"
                  name="PrefixTimestamp">false</property>
                <property
                  dataType="System.Null"
                  expressionType="Notify"
                  name="SelfRef"
                  typeConverter="NOTBROWSABLE" />
                <property
                  dataType="System.Boolean"
                  description="Treat empty string as NULL for any numeric data types"
                  expressionType="Notify"
                  name="TreatBlankNumberAsNull">true</property>
                <property
                  dataType="System.Boolean"
                  description="Treat empty string as NULL for bool data types"
                  expressionType="Notify"
                  name="TreatBlankBoolAsNull">true</property>
                <property
                  dataType="System.Boolean"
                  description="Treat empty string as NULL for any date/time data types"
                  expressionType="Notify"
                  name="TreatBlankDateAsNull">true</property>
                <property
                  dataType="System.Int32"
                  description="Encoding of source file"
                  expressionType="Notify"
                  name="Encoding"
                  typeConverter="ZappySys.Common.EncodingType, ZappySys.Common, Version=1.0.2019.11015, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                <property
                  dataType="System.String"
                  description="Character set for text (e.g. utf-8 )"
                  expressionType="Notify"
                  name="CharacterSet"></property>
                <property
                  dataType="System.Int32"
                  description="Defines how to read the JSON file or direct string"
                  expressionType="Notify"
                  name="AccessMode"
                  typeConverter="ZappySys.Common.Ssis.FileValueAccessMode, ZappySys.Common, Version=1.0.2019.11015, Culture=neutral, PublicKeyToken=1903265a93eae502">2</property>
                <property
                  dataType="System.String"
                  description="Defines how to read the JSON file or direct string"
                  expressionType="Notify"
                  name="DirectValue"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="Variable name which holds JSON string"
                  expressionType="Notify"
                  name="ValueVariable"
                  typeConverter="ZappySys.PowerPack.Converters.VariableEditor,ZappySys.PowerPack140.UI,Version=1.0.0.0,Culture=neutral,PublicKeyToken=1903265a93eae502"></property>
                <property
                  dataType="System.String"
                  description="Variable name which holds data file path or url"
                  expressionType="Notify"
                  name="PathVariable"
                  typeConverter="ZappySys.PowerPack.Converters.VariableEditor,ZappySys.PowerPack140.UI,Version=1.0.0.0,Culture=neutral,PublicKeyToken=1903265a93eae502"></property>
                <property
                  dataType="System.String"
                  description="JSON file file path (e.g. c:\data\myfile.json) or pattern to process multiple files (e.g. c:\data\*.json)"
                  expressionType="Notify"
                  name="DirectPath"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">C:\Users\ayma-93\Documents\TEC\Semestre II - 2019\Bases de Datos II\Proyectos\Proyecto-II---Datawarehouse\Mongo\mongo 101_200.txt</property>
                <property
                  dataType="System.Boolean"
                  description="Include files from sub folders too."
                  expressionType="Notify"
                  name="Recursive">false</property>
                <property
                  dataType="System.Boolean"
                  description="By default process stops with error if specified local file is not found. Set this property to true if you wish to continue rather than throwing file not found error."
                  expressionType="Notify"
                  name="ContinueOnFileNotFoundError">false</property>
                <property
                  dataType="System.String"
                  description="Set this if you want to set custom Http headers. You may use variable anywhere in the header value using syntax {{User::YourVarName}}. Syntax of Header key value pair is : &amp;lt;request&amp;gt;&amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-1&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;AAA&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt; &amp;lt;header&amp;gt;&amp;lt;name&amp;gt;x-myheader-2&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;BBB&amp;lt;/value&amp;gt;&amp;lt;/header&amp;gt;&amp;lt;/request&amp;gt;"
                  expressionType="Notify"
                  name="HttpHeaders">&lt;request&gt;&lt;header&gt;&lt;name&gt;Accept&lt;/name&gt;&lt;value&gt;*/*&lt;/value&gt;&lt;/header&gt;&lt;header&gt;&lt;name&gt;Cache-Control&lt;/name&gt;&lt;value&gt;no-cache&lt;/value&gt;&lt;/header&gt;&lt;/request&gt;</property>
                <property
                  dataType="System.String"
                  description="User defined data you wish to send along with your HTTP Request (e.g. Upload file data, Form POST data). Usually you have to set content-type of your data but if you select RequestMethod=POST then system will automatically set content-type=application/x-www-form-urlencoded."
                  expressionType="Notify"
                  name="HttpRequestData"></property>
                <property
                  dataType="System.String"
                  description="Http Web Request Method (e.g. POST, GET, PUT, LIST, DELETE...). Refer your API documentation if you are not sure which method you have to use."
                  expressionType="Notify"
                  name="HttpRequestMethod">GET</property>
                <property
                  dataType="System.Int32"
                  description="Specifies content type for data you wish to POST. If you select Default option then system default content type will be used (i.e. application/x-www-form-urlencoded). If you specify Content-Type header along with this option then header value takes precedence."
                  expressionType="Notify"
                  name="HttpRequestContentType"
                  typeConverter="ZappySys.Common.Web.HttpRequestContentType, ZappySys.Common, Version=1.0.2019.11015, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                <property
                  dataType="System.Boolean"
                  description="Check this option if you want to upload file(s) (i.e. POST RAW file data) or send data using Multi-Part encoding method (i.e. Content-Type: multipart/form-data). Multi-Part request allows you to mix key/value and upload files in same request. On the other hand raw upload allows only single file upload (without any key/value) &#xA;&#xA;==== Raw Upload (Content-Type: application/octet-stream) =====   &#xA;To upload single file in raw mode check this option and specify full file path starting with @ sign in the Body (e.g.  @c:\data\myfile.zip ) &#xA;&#xA;==== Form-Data / Multipart Upload (Content-Type: multipart/form-data) =====   &#xA;To treat your Request data as multi part fields you must specify key/value pairs separated by new lines into RequestData field (i.e. Body). Each key value pair is entered on new-line and key/value are separated using equal sign (=). Preceding and trailing spaces are ignored also blank lines are ignored. &#xA;If field value has some any special character(s) then use escape sequence (e.g. For NewLine: \r\n, For Tab: \t, For at (@): \@). When value of any field starts with at sign (@) its automatically treated as File you want to upload. File content type is determined based on extension.&#xA;See below Example of uploading multiple files along with additional fields.&#xA;&#xA;file1=@c:\data\Myfile1.txt&#xA;file2=@c:\data\Myfile2.txt&#xA;SomeField1=aaaaaaa&#xA;SomeField2=12345&#xA;SomeFieldWithNewLineAndTab=This is line1\r\nThis is line2\r\nThis is \ttab \ttab \ttab&#xA;SomeFieldStartingWithAtSign=\@MyTwitterId&#xA;"
                  expressionType="Notify"
                  name="IsMultiPartUpload">false</property>
                <property
                  dataType="System.Int32"
                  description="Data format coming from HTTP Response. This is useful for example when you have OData service and you want to automatically consume all pages of data using odata.netUrl. Setting JsonFormat=Odata will automatically do it for you. This setting is only applicable if JSON is coming from HTTP WebRequest."
                  expressionType="Notify"
                  name="JsonFormat"
                  typeConverter="ZappySys.Json.JsonFormat, ZappySys.Json, Version=1.0.2019.11015, Culture=neutral, PublicKeyToken=1903265a93eae502">2</property>
                <property
                  dataType="System.Boolean"
                  description="Enable custom proxy settings (If this is not set then system default proxy will be used. To disable proxy totally uncheck this option and check DoNotUseDefaultProxy option if available)"
                  expressionType="Notify"
                  name="UseProxy">false</property>
                <property
                  dataType="System.String"
                  description="Web URL of Proxy server (including port  if necessary). [e.g. http://myproxyserver:8080/]"
                  expressionType="Notify"
                  name="ProxyUrl"></property>
                <property
                  dataType="System.Boolean"
                  description="Enable passing userid and password to proxy server"
                  expressionType="Notify"
                  name="UseProxyCreds">false</property>
                <property
                  dataType="System.String"
                  description="Proxy username"
                  expressionType="Notify"
                  name="ProxyUserName"></property>
                <property
                  dataType="System.String"
                  description="Proxy password"
                  expressionType="Notify"
                  name="ProxyPassword"></property>
                <property
                  dataType="System.String"
                  description="If Service response support pagination using some sort of next url attribute then specify which attribute name in JSON Response string which holds next url. If no attribute found or its null then component will stop fetching next resultset. Example: $.pagingInfo.nextUrl"
                  expressionType="Notify"
                  name="NextUrlAttribute"></property>
                <property
                  dataType="System.String"
                  description="If Service response support pagination using some sort of prev/next url attribute then specify which previous link attribute name from JSON Response string which holds previous url."
                  expressionType="Notify"
                  name="PrevUrlAttribute"></property>
                <property
                  dataType="System.String"
                  description="Specifies value for NextUrlAttribute or StopIndicatorAttribute which indicates last page to stop pagination. If you have specified StopIndicatorAttribute then you can use Regular expression rather than static value to indicate last page. To use regular expression value of this property must start with regex= prefix. Example : regex=FALSE|N  (assuming you set StopIndicatorAttribute to something like $.hasMore)"
                  expressionType="Notify"
                  name="NextUrlStopIndicator"></property>
                <property
                  dataType="System.String"
                  description="Attribute name or expression for attribute which can be used as stop indicator (e.g. hasmore --or-- $.pagination.hasmore). If this value is blank then NextUrlAttribute is used"
                  expressionType="Notify"
                  name="StopIndicatorAttribute"></property>
                <property
                  dataType="System.String"
                  description="If you want to include certain text (or parameters) at the end of Next url then specify this attribute (e.g. &amp;format=json). Another common usecase of this property is to supply pagination token to next Page URL. You can also use &lt;%nextlink%&gt; or  &lt;%nextlink_encoded%&gt; placeholder (e.g. &amp;cursor=&lt;%nextlink_encoded%&gt; )"
                  expressionType="Notify"
                  name="NextUrlSuffix"></property>
                <property
                  dataType="System.Int32"
                  description="This property indicates total number of milliseconds you want to wait before sending next request. This option allows you to adjust how many API calls can be made within certain timeframe. If your API Service has no limit then set this option to zero"
                  expressionType="Notify"
                  name="NextUrlWait">0</property>
                <property
                  dataType="System.Boolean"
                  description="If this option is true then component will continue without exception on 404 error (Url not found). This allows you to consume data gracefully."
                  expressionType="Notify"
                  name="ContinueOnUrlNotFoundError">false</property>
                <property
                  dataType="System.Boolean"
                  description="Continue when any type of exception occurs during http request"
                  expressionType="Notify"
                  name="ContineOnAnyError">false</property>
                <property
                  dataType="System.Boolean"
                  description="Continue on error when specified substring found in response"
                  expressionType="Notify"
                  name="ContineOnErrorForMessage">false</property>
                <property
                  dataType="System.Boolean"
                  description="Continue on error when specified status code returned from web server"
                  expressionType="Notify"
                  name="ContineOnErrorForStatusCode">false</property>
                <property
                  dataType="System.Boolean"
                  description="When error occurs no data is returned. Use this option to get content eventhough error occurs. When this option is checked you can't use [continue on error when specific string found in response] option"
                  expressionType="Notify"
                  name="ConsumeResponseOnError">false</property>
                <property
                  dataType="System.Int32"
                  description="Status code to match when error occurs and ContineOnErrorForStatusCode option is true. If Response status code matches to this code then task continues to run"
                  expressionType="Notify"
                  name="ErrorStatusCodeToMatch">404</property>
                <property
                  dataType="System.String"
                  description="Error substring to match when error occurs and ContineOnErrorForMessage option is true. If Response status code matches to this code then task continues to run"
                  expressionType="Notify"
                  name="ErrorSubstringToMatch"></property>
                <property
                  dataType="System.String"
                  description="Cookie Container can be used to maintain state between multiple web requests. Example: You can login to site like wordpress and then extract any private page content by simply passing authentication cookies using this variable."
                  expressionType="Notify"
                  name="CookieContainerVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Http request Timeout in seconds. Set this to 0 if you want to use system default value (i.e. 100 seconds)"
                  expressionType="Notify"
                  name="RequestTimeout">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies which security protocol is supported for HTTPS communication. Using this option you can enable legacy protocol or enforce to use latest version of security protocol (Note: TLS 1.2 is only supported in SSIS 2014 or Higher)."
                  expressionType="Notify"
                  name="SecurityProtocol"
                  typeConverter="ZappySys.PowerPack.Common.HttpsSecurityProtocolType, ZappySys.PowerPack140, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                <property
                  dataType="System.Boolean"
                  description="Enable support for gzip or deflate compression. When you check this option compressed response automatically de-compressed saving bandwidth. This option is only valid if web server supports compressed response stream. Check your API documentation for more information."
                  expressionType="Notify"
                  name="EnableCompressionSupport">true</property>
                <property
                  dataType="System.Boolean"
                  description="Ignore SSL certificate related errors. Example: if you getting SSL/TLS errors because of certificate expired or certificate is not from trusted authority or certificate is self-signed. By checking this option you will not get SSL/TLS error."
                  expressionType="Notify"
                  name="IgnoreCertificateErrors">false</property>
                <property
                  dataType="System.Boolean"
                  description="Allow unsecure ciphers/suites and curves for SSLS/TLS communication. Use this option to communicate with web servers which needs legacy / unsecured ciphers support. This option is only trigged when you change default SSL/TLS Version on advanced settings tab."
                  expressionType="Notify"
                  name="AllowUnsecureSuite">false</property>
                <property
                  dataType="System.Boolean"
                  description="Use connection to pass credentials for authentication (e.g. Use UserID/Password or Use OAuth Protocol for token based approach)"
                  expressionType="Notify"
                  name="UseConnection">false</property>
                <property
                  dataType="System.Int32"
                  description="Specified how you want to loop through multiple pages returned by REST API."
                  expressionType="Notify"
                  name="PagingMode"
                  typeConverter="ZappySys.Common.RestApiPagingMode, ZappySys.Common, Version=1.0.2019.11015, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                <property
                  dataType="System.Boolean"
                  description="If you wish to pass extracted pagination token or current page number in the body of next request then set this option to true. You can use [$pagetoken$] and [$pagetoken$] placeholders anywhere in the Body where you wish to insert extracted Page token. You must set encoded token you can use &lt;%nextlink_encoded%&gt; inside SuffixForNextUrl Property. If you dont use SuffixForNextUrl then raw nextLink or Token will be inserted inside the body. If you dont specify [$pagetoken$] placeholder in the body then NextPage Token will be appended at the end. NextPage Token is extracted by filter expression specified using property NextUrlSuffix"
                  expressionType="Notify"
                  name="EnablePageTokenForBody">false</property>
                <property
                  dataType="System.Boolean"
                  description="Set this to true if you wish to specify different URL, Header, Body or Filter for first page and next page (i.e. Paginated response). Some APIs like Amazon MWS, NetSuite, Zuora) you may need to set this to true."
                  expressionType="Notify"
                  name="HasDifferentNextPageInfo">false</property>
                <property
                  dataType="System.String"
                  description="When HasDifferentNextPageInfo=true you can set this property to indicate first page and next page. You can specify different URL, Header, Body or Filter for first page and next page (i.e. Paginated response). Use [$tag$] as placeholder anywhere in the URL, Header, Body or Filter and at runtime system will replace it with correct value (first page or next page value). Syntax to specify placeholder for first page vs next page is like a connectionstring url=FirstPageValue|NextPageValue;header=FirstPageValue|NextPageValue;body=FirstPageValue|NextPageValue;filter=FirstPageValue|NextPageValue; You can use one or more key/value pairs to make things dynamic (e.g. url, header, body or filter)  .For example if you have pagination in your API and First URL is http://abc.com/api/items/get and to get more records you have to call http://abc.com/api/items/getNext then you can use [$tag$] as placeholder in the URL http://abc.com/api/items/[$tag$] and specify this property with first page tag and next page tag as url=get|getNext  (Tags are separated using vertical bar). "
                  expressionType="Notify"
                  name="PagePlaceholders"></property>
                <property
                  dataType="System.String"
                  description="Use this property to set request body fragment for first page. HasDifferentNextPageInfo must be set to true to use this property."
                  expressionType="Notify"
                  name="FirstPageBodyPart"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="Use this property to set request body fragment for any request after first request. HasDifferentNextPageInfo must be set to true to use this property."
                  expressionType="Notify"
                  name="NextPageBodyPart"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="Expression to extract Maximum pages to loop through. Some APIs don't stop pagination and keep returning last page data when you try to read data after last page. Specify expression (e.g. $.page_count ) to read total pages to loop through using this property."
                  expressionType="Notify"
                  name="PagingMaxPagesExpr"></property>
                <property
                  dataType="System.String"
                  description="Expression to extract Maximum records to loop through. Some APIs don't stop pagination and keep returning last page data when you try to read data after last page. Specify expression (e.g. $.total_rows ) to read total pages to loop through using this property. This setting is ignored if you set PagingMaxPagesExpr."
                  expressionType="Notify"
                  name="PagingMaxRowsExpr"></property>
                <property
                  dataType="System.String"
                  description="When you enable PagingMaxRowsExpr (end pagination based on MaxRowCount) then you need to count records coming in each response. This expression extract all rows found under specified expression (e.g. $.orders[*] if all records found under orders node)."
                  expressionType="Notify"
                  name="PagingMaxRowsDataPathExpr"></property>
                <property
                  dataType="System.String"
                  description="e.g. Type page_num if URL looks like this =&gt; http://abc.com/?page_num=1&amp;sort=true  (page number via query string)&#xA;--or-- Type &lt;%page%&gt; if page number is inside URL path like this =&gt; http://abc.com/1/?sort=true  (e.g. replace page number in url with placeholder http://abc.com/&lt;%page%&gt;/?sort=true)&#xA;Page number will be incremented by one for next URL until last page is reached or [Max Page Number] is reached"
                  expressionType="Notify"
                  name="PageNumberAttributeNameInUrl"></property>
                <property
                  dataType="System.Int32"
                  description="Maximum page number until which auto increment is allowed. Type zero for no limit. Next URL contains next page number (increment by one) until last page is detected or [Max Page Number] limit is reached."
                  expressionType="Notify"
                  name="MaxPageNumber">0</property>
                <property
                  dataType="System.String"
                  description="Variable name which will hold starting page number. This is ignored if you useing parameter name from query string to indicate page number."
                  expressionType="Notify"
                  name="StartPageNumberVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Page counter increment. By default next page is incremented by one if this value is zero. You can also enter negative number if you want to decrease page counter."
                  expressionType="Notify"
                  name="PageNumberIncrement">1</property>
                <property
                  dataType="System.Int32"
                  description="Specified how you want detect last page."
                  expressionType="Notify"
                  name="PagingEndStrategy"
                  typeConverter="ZappySys.Common.UrlPagingEndDetectionStrategy, ZappySys.Common, Version=1.0.2019.11015, Culture=neutral, PublicKeyToken=1903265a93eae502">3</property>
                <property
                  dataType="System.Boolean"
                  description="Condition result to compare to detect last page. Set this property to True if you want detect last page if condition is true else set this to False."
                  expressionType="Notify"
                  name="LastPageWhenConditionEqualsTo">true</property>
                <property
                  dataType="System.Int32"
                  description="Minimum bytes expected from response."
                  expressionType="Notify"
                  name="ResponseMinBytes">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum bytes from response."
                  expressionType="Notify"
                  name="ResponseMaxBytes">3</property>
                <property
                  dataType="System.String"
                  description="Expected error message sub string from response."
                  expressionType="Notify"
                  name="ResponseErrorString">not found</property>
                <property
                  dataType="System.Int32"
                  description="Expected status code from response when page number you trying to access not found."
                  expressionType="Notify"
                  name="ResponseStatusCode">404</property>
                <property
                  dataType="System.Int32"
                  description="Maximum JSON records to fetch. Set this value to 0 for all records"
                  expressionType="Notify"
                  name="MaxRows">0</property>
                <property
                  dataType="System.String"
                  description="Enter expression here to filter data.(Example:  $.Users[*].UserName ) This will fetch User names from users records"
                  expressionType="Notify"
                  name="Filter"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">$.Data</property>
                <property
                  dataType="System.Boolean"
                  description="Use this option to include parent properties (Non array) in the output along with Filtered Rows"
                  expressionType="Notify"
                  name="IncludeParentColumns">true</property>
                <property
                  dataType="System.Boolean"
                  description="By default child and parent information is not included in the output if children not found for specified expression. For example if you want to extract all orders from all customers nodes then you can type $.Customers[*].Orders[*]. This will fetch all orders from all customers. By default customers records without orders wont be included in the output. If you want to include those customers where orders not found then check this option (Output null information for order attributes). This behavior is similar to LEFT OUTER JOIN in SQL (Left side is parent, right side is child). This option is ***resource intensive*** so only check if you really care about this behavior."
                  expressionType="Notify"
                  name="IncludeParentColumnsWhenChildMissing">false</property>
                <property
                  dataType="System.Boolean"
                  description="Set this option to true if you want to output parent columns which are array. By default any parent column which is an array is not included in output. See also FilterForParentColumnsWithArrayType property if you set this property"
                  expressionType="Notify"
                  name="IncludeParentColumnsWithArrayType">false</property>
                <property
                  dataType="System.String"
                  description="Filter expression to extract value form parent"
                  expressionType="Notify"
                  name="FilterForParentColumnsWithArrayType"></property>
                <property
                  dataType="System.String"
                  description="Prefix for parent column name. This option is only valid if you have set IncludeParentColumns=True"
                  expressionType="Notify"
                  name="ParentColumnPrefix">P_</property>
                <property
                  dataType="System.Boolean"
                  description="Throw error if property name specified in filter expression is missing. By default it will ignore any missing property errors."
                  expressionType="Notify"
                  name="ThrowErrorIfPropertyMissing">false</property>
                <property
                  dataType="System.Int32"
                  description="This property how many nested levels should be scanned to fetch various properties. 0=Scan all child levels."
                  expressionType="Notify"
                  name="MaxLevelsToScan">0</property>
                <property
                  dataType="System.String"
                  description="List comma separated property names from JSON document which you want to exclude from output. Specify parent property name to exclude all child nodes."
                  expressionType="Notify"
                  name="ExcludedProperties"></property>
                <property
                  dataType="System.String"
                  description="Property level separator used in generated property name (separator for outer properties - Above selected filter node). Use this if default separator is producing duplicate property name which is conflicting with existing name."
                  expressionType="Notify"
                  name="LevelSeparator">_</property>
                <property
                  dataType="System.Boolean"
                  description="Enables deep array flattening for selected filtered hierarchy. When you turn on this property it will flatten each property of each array item and expose as column (e.g. If you have Filter set as $.customers[*] and for each customer you have an array of Addresses then you may see output columns like Addresses.1.City, Addresses.1.State, Addresses.2.City, Addresses.2.State .... Addresses.N.City, Addresses.N.State). You can control how many array items you want to flatten by setting MaxArrayItemsToFlatten property."
                  expressionType="Notify"
                  name="EnableArrayFlattening">false</property>
                <property
                  dataType="System.Int32"
                  description="Maximum number of array items to flatten. inner array flattening. Adjust this property to control how many columns being generated. This option is ignored if you set EnableArrayFlattening=false"
                  expressionType="Notify"
                  name="MaxArrayItemsToFlatten">10</property>
                <property
                  dataType="System.Int32"
                  description="Compression format for source file (e.g. gzip, zip)"
                  expressionType="Notify"
                  name="FileCompressionType"
                  typeConverter="ZappySys.Common.FileCompressionType, ZappySys.Common, Version=1.0.2019.11015, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                <property
                  dataType="System.Int32"
                  description="Array Transformation you want to apply. Useful for case when you have 2-Dimensional arrays with rows/columns in separate arrays."
                  expressionType="Notify"
                  name="ArrayTransformationType"
                  typeConverter="ZappySys.Json.ArrayTransformType, ZappySys.Json, Version=1.0.2019.11015, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                <property
                  dataType="System.String"
                  description="Filter expression to use to extract column names for array transformation."
                  expressionType="Notify"
                  name="ArrayTransColumnNameFilter"></property>
                <property
                  dataType="System.String"
                  description="Filter expression for row values (Not applicable for simple array transformation)."
                  expressionType="Notify"
                  name="ArrayTransRowValueFilter"></property>
                <property
                  dataType="System.Boolean"
                  description="When you have 2D array but don't have column list specified in a separate array then use this option (e.g. { arr: [[10,11],[21,22]] } )."
                  expressionType="Notify"
                  name="ArrayTransEnableCustomColumns">false</property>
                <property
                  dataType="System.String"
                  description="When you have 2D array but don't have column list specified in a separate array then use specify column names here. Use comma separated list (e.g col1,col2,col3 ). Column name Order must match value order."
                  expressionType="Notify"
                  name="ArrayTransCustomColumns"></property>
                <property
                  dataType="System.String"
                  description="Specifies how custom date formatted strings are parsed when reading JSON."
                  expressionType="Notify"
                  name="DateFormatString"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies how date formatted strings, e.g. Date(1198908717056) and 2012-03-21T05:40Z, are parsed when reading JSON."
                  expressionType="Notify"
                  name="DateParseHandling"
                  typeConverter="ZappySys.Common.DateParseHandling, ZappySys.Common, Version=1.0.2019.11015, Culture=neutral, PublicKeyToken=1903265a93eae502">1</property>
                <property
                  dataType="System.Boolean"
                  description="Indent JSON output so its easy to read."
                  expressionType="Notify"
                  name="IndentOutput">false</property>
                <property
                  dataType="System.Boolean"
                  description="Output as raw JSON document rather than parsing individual fields. This option is helpful if you have documents stored in a file and you want to pass them downstream as raw JSON string rather than parsing into columns."
                  expressionType="Notify"
                  name="OutputRawDocument">false</property>
                <property
                  dataType="System.Boolean"
                  description="Set this option to true if you want to output FilePath. This option is ignored when you consume DirectValue or data from Url rather than local files. Output column name will be __FilePath"
                  expressionType="Notify"
                  name="OutputFilePath">false</property>
                <property
                  dataType="System.Boolean"
                  description="Set this option to true if you want to output FileName. This option is ignored when you consume DirectValue or data from Url rather than local files. Output column name will be __FileName"
                  expressionType="Notify"
                  name="OutputFileName">false</property>
                <property
                  dataType="System.Boolean"
                  description="Set this option to true if you want to move processed file to archive folder."
                  expressionType="Notify"
                  name="EnableArchiveFile">false</property>
                <property
                  dataType="System.String"
                  description="Folder path where you want to move processed file."
                  expressionType="Notify"
                  name="ArchiveFolderPath"></property>
                <property
                  dataType="System.Boolean"
                  description="Folder path where you want to move processed file."
                  expressionType="Notify"
                  name="OverwriteFileInArchiveFolder">false</property>
                <property
                  dataType="System.String"
                  description="File naming convention for archived file. By default it will same name as original source file processed. But you can control naming format using {%name%} and {%ext%} placeholders. e.g. {%name%}_processed{%ext%} or {%name%}{%ext%}.{{System::ContainerStartTime,yyyyMMdd_HHmmss_fff}}"
                  expressionType="Notify"
                  name="ArchiveFileNamingConvention"></property>
                <property
                  dataType="System.Boolean"
                  description="When this property is true then Column is converted to Row. Pivoted names will appear under  Pivot_Name column and values will appear under Pivot_Value field."
                  expressionType="Notify"
                  name="EnablePivot">false</property>
                <property
                  dataType="System.Int32"
                  description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                  expressionType="Notify"
                  name="MetaDataScanMode"
                  typeConverter="ZappySys.Common.Data.MetaDataScanMode, ZappySys.Common, Version=1.0.2019.11015, Culture=neutral, PublicKeyToken=1903265a93eae502">4</property>
                <property
                  dataType="System.Int32"
                  description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                  expressionType="Notify"
                  name="MetaDataCustomLength">1000</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">ZappySys.JsonSource</property>
              </properties>
              <outputs>
                <output
                  refId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput]"
                  errorOrTruncationOperation="Error"
                  errorRowDisposition="FailComponent"
                  name="JsonSourceOutput"
                  truncationRowDisposition="FailComponent">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[idFactura]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].ExternalColumns[Factura]"
                      length="36"
                      lineageId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[idFactura]"
                      name="idFactura" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[fecha]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].ExternalColumns[Fecha]"
                      length="32"
                      lineageId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[fecha]"
                      name="fecha" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[fechaVencimiento]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].ExternalColumns[FechaVencimiento]"
                      length="32"
                      lineageId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[fechaVencimiento]"
                      name="fechaVencimiento" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[idCliente]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].ExternalColumns[Cliente]"
                      length="20"
                      lineageId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[idCliente]"
                      name="idCliente" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[idItem]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].ExternalColumns[Producto]"
                      length="28"
                      lineageId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[idItem]"
                      name="idItem" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[cantidad]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].ExternalColumns[Cantidad]"
                      length="24"
                      lineageId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[cantidad]"
                      name="cantidad" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[moneda]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].ExternalColumns[Moneda]"
                      length="12"
                      lineageId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[moneda]"
                      name="moneda" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[precio]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].ExternalColumns[Precio]"
                      length="44"
                      lineageId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[precio]"
                      name="precio" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[total]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].ExternalColumns[Total]"
                      length="40"
                      lineageId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[total]"
                      name="total" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[almacén]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].ExternalColumns[Almacén]"
                      length="8"
                      lineageId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[almacén]"
                      name="almacén" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[idVendedor]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].ExternalColumns[Vendedor]"
                      length="8"
                      lineageId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[idVendedor]"
                      name="idVendedor" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[totalUSD]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].ExternalColumns[TotalUSD]"
                      length="24"
                      lineageId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[totalUSD]"
                      name="totalUSD" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[impuesto]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].ExternalColumns[Impuesto]"
                      length="36"
                      lineageId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[impuesto]"
                      name="impuesto" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[impuestoUSD]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].ExternalColumns[ImpuestoUSD]"
                      length="20"
                      lineageId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[impuestoUSD]"
                      name="impuestoUSD" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[tipoCambio]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].ExternalColumns[Tipo de cambio]"
                      length="16"
                      lineageId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[tipoCambio]"
                      name="tipoCambio" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[ganacia]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].ExternalColumns[Ganacia]"
                      length="44"
                      lineageId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[ganacia]"
                      name="ganacia" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[gananciaUSD]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].ExternalColumns[GananciaUSD]"
                      length="36"
                      lineageId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[gananciaUSD]"
                      name="gananciaUSD" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].ExternalColumns[Factura]"
                      dataType="wstr"
                      length="36"
                      name="Factura" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].ExternalColumns[Fecha]"
                      dataType="wstr"
                      length="32"
                      name="Fecha" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].ExternalColumns[FechaVencimiento]"
                      dataType="wstr"
                      length="32"
                      name="FechaVencimiento" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].ExternalColumns[Cliente]"
                      dataType="wstr"
                      length="20"
                      name="Cliente" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].ExternalColumns[Producto]"
                      dataType="wstr"
                      length="28"
                      name="Producto" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].ExternalColumns[Cantidad]"
                      dataType="wstr"
                      length="24"
                      name="Cantidad" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].ExternalColumns[Moneda]"
                      dataType="wstr"
                      length="12"
                      name="Moneda" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].ExternalColumns[Precio]"
                      dataType="wstr"
                      length="44"
                      name="Precio" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].ExternalColumns[Total]"
                      dataType="wstr"
                      length="40"
                      name="Total" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].ExternalColumns[Almacén]"
                      dataType="wstr"
                      length="8"
                      name="Almacén" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].ExternalColumns[Vendedor]"
                      dataType="wstr"
                      length="8"
                      name="Vendedor" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].ExternalColumns[TotalUSD]"
                      dataType="wstr"
                      length="24"
                      name="TotalUSD" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].ExternalColumns[Impuesto]"
                      dataType="wstr"
                      length="36"
                      name="Impuesto" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].ExternalColumns[ImpuestoUSD]"
                      dataType="wstr"
                      length="20"
                      name="ImpuestoUSD" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].ExternalColumns[Tipo de cambio]"
                      dataType="wstr"
                      length="16"
                      name="Tipo de cambio" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].ExternalColumns[Ganacia]"
                      dataType="wstr"
                      length="44"
                      name="Ganacia" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].ExternalColumns[GananciaUSD]"
                      dataType="wstr"
                      length="36"
                      name="GananciaUSD" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSource Error Output]"
                  isErrorOut="true"
                  name="JsonSource Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSource Error Output].Columns[Factura]"
                      dataType="wstr"
                      length="36"
                      lineageId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSource Error Output].Columns[Factura]"
                      name="Factura" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSource Error Output].Columns[Fecha]"
                      dataType="wstr"
                      length="32"
                      lineageId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSource Error Output].Columns[Fecha]"
                      name="Fecha" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSource Error Output].Columns[FechaVencimiento]"
                      dataType="wstr"
                      length="32"
                      lineageId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSource Error Output].Columns[FechaVencimiento]"
                      name="FechaVencimiento" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSource Error Output].Columns[Cliente]"
                      dataType="wstr"
                      length="20"
                      lineageId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSource Error Output].Columns[Cliente]"
                      name="Cliente" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSource Error Output].Columns[Producto]"
                      dataType="wstr"
                      length="28"
                      lineageId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSource Error Output].Columns[Producto]"
                      name="Producto" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSource Error Output].Columns[Cantidad]"
                      dataType="wstr"
                      length="24"
                      lineageId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSource Error Output].Columns[Cantidad]"
                      name="Cantidad" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSource Error Output].Columns[Moneda]"
                      dataType="wstr"
                      length="12"
                      lineageId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSource Error Output].Columns[Moneda]"
                      name="Moneda" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSource Error Output].Columns[Precio]"
                      dataType="wstr"
                      length="44"
                      lineageId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSource Error Output].Columns[Precio]"
                      name="Precio" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSource Error Output].Columns[Total]"
                      dataType="wstr"
                      length="40"
                      lineageId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSource Error Output].Columns[Total]"
                      name="Total" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSource Error Output].Columns[Almacén]"
                      dataType="wstr"
                      length="8"
                      lineageId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSource Error Output].Columns[Almacén]"
                      name="Almacén" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSource Error Output].Columns[Vendedor]"
                      dataType="wstr"
                      length="8"
                      lineageId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSource Error Output].Columns[Vendedor]"
                      name="Vendedor" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSource Error Output].Columns[TotalUSD]"
                      dataType="wstr"
                      length="24"
                      lineageId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSource Error Output].Columns[TotalUSD]"
                      name="TotalUSD" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSource Error Output].Columns[Impuesto]"
                      dataType="wstr"
                      length="36"
                      lineageId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSource Error Output].Columns[Impuesto]"
                      name="Impuesto" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSource Error Output].Columns[ImpuestoUSD]"
                      dataType="wstr"
                      length="20"
                      lineageId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSource Error Output].Columns[ImpuestoUSD]"
                      name="ImpuestoUSD" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSource Error Output].Columns[Tipo de cambio]"
                      dataType="wstr"
                      length="16"
                      lineageId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSource Error Output].Columns[Tipo de cambio]"
                      name="Tipo de cambio" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSource Error Output].Columns[Ganacia]"
                      dataType="wstr"
                      length="44"
                      lineageId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSource Error Output].Columns[Ganacia]"
                      name="Ganacia" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSource Error Output].Columns[GananciaUSD]"
                      dataType="wstr"
                      length="36"
                      lineageId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSource Error Output].Columns[GananciaUSD]"
                      name="GananciaUSD" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSource Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSource Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSource Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSource Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSource Error Output].Columns[ErrorColumnName]"
                      codePage="1252"
                      dataType="str"
                      length="128"
                      lineageId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSource Error Output].Columns[ErrorColumnName]"
                      name="ErrorColumnName" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSource Error Output].Columns[ErrorMessage]"
                      dataType="wstr"
                      length="1024"
                      lineageId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSource Error Output].Columns[ErrorMessage]"
                      name="ErrorMessage" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Importar Ventas a Mongo\MongoDB Destination"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="MongoDB Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
              description="The MongoDB Destination is used to write NoSQL data to MongoDB collection. NoSQL table has no strict schema and each row may contain different number of attributes unlike traditional RDBMS table."
              name="MongoDB Destination"
              usesDispositions="true"
              version="5">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Enables use of custom lookup query for Update / Upsert or Delete Operation. By default JOIN condition for target record match is generated automatically based on columns you supply in ColumnsForLookup property. However in some cases you need to supply custom condition for lookup to perform complex operations, in such case enable this option. When you enable this option you must supply map __DOCUMENT__ input column. String you supply to this column should be in this format &lt;command&gt;&lt;query&gt;YOUR_LOOKUP_QUERY&lt;/query&gt;&lt;document&gt;YOUR_JSON_DOC&lt;/document&gt;&lt;/command&gt;. Lookup query in &lt;query&gt; tag can be either Mongo JSON format (e.g. { &quot;CustomerID&quot; : &quot;AAA&quot;, &quot;Orders.OrderID&quot; : { &quot;$ne&quot; : &quot;1000&quot; } }) or you can use ZappySys SQL query (e.g. select * from mytable where CustomerID='AAA' and [Orders.$.OrderID] != '1000' )"
                  expressionType="Notify"
                  name="EnableCustomLookupQuery">false</property>
                <property
                  dataType="System.Int32"
                  description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                  expressionType="Notify"
                  name="LoggingMode"
                  typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack140, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                <property
                  dataType="System.Boolean"
                  description="When you enable this property it will prefix timestamp before Log messages."
                  expressionType="Notify"
                  name="PrefixTimestamp">false</property>
                <property
                  dataType="System.Null"
                  expressionType="Notify"
                  name="SelfRef"
                  typeConverter="NOTBROWSABLE" />
                <property
                  dataType="System.Boolean"
                  description="When this option is true then each batch is processed in bulk mode in first attempt and when it fails that particular batch is processed in row by row mode to detect bad record. By default when error occurs all records from that batch is rejected but when this option is true you can process all good records and only reject records causing error."
                  expressionType="Notify"
                  name="SwitchToRowByRowOnBatchFail">false</property>
                <property
                  dataType="System.String"
                  description="Table name from where you want to read data"
                  expressionType="Notify"
                  name="TableName"
                  typeConverter="ZappySys.PowerPack.Converters.TableEditor,ZappySys.PowerPack140.UI,Version=1.0.0.0,Culture=neutral,PublicKeyToken=1903265a93eae502">facturas</property>
                <property
                  dataType="System.Int32"
                  description="Indicates how many records are process in a single request. Setting this value to 0 will extract all records in single request."
                  expressionType="Notify"
                  name="BatchSize">500</property>
                <property
                  dataType="System.Int32"
                  description="Indicates Access Mode of data (e.g. Table or Sql Query)"
                  expressionType="Notify"
                  name="AccessMode"
                  typeConverter="ZappySys.PowerPack.Common.DataAccessMode, ZappySys.PowerPack140, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                <property
                  dataType="System.String"
                  description="Specifies SQL query to access data. This setting is ignored when access mode is set to Table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies operation for destination data load (e.g. Insert, Reload etc). Default operation is Insert (data always appended to target)."
                  expressionType="Notify"
                  name="Operation"
                  typeConverter="ZappySys.PowerPack.Common.DestinationOperation, ZappySys.PowerPack140, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">3</property>
                <property
                  dataType="System.String"
                  description="Update/Upsert/Delete you will need JOIN columns. If you have not specified JOIN column in Mapping Editor then supply here. Specify comma separated list of target column names which can be used to lookup documents on target for selected Operation. Column names are case-sensitive. Make sure JOIN column name is correctly spelled. JOIN column can be part of supplied input DOCUMENT or it can be mapped separately as input column on Mapping Editor. When JOIN column is found inside nested sub document (i.e. not in first level) then you have to use hierarchy separator (&gt;) and server side path for same column (Use dot). Example: if you joining by two columns OrderID and ZipCode where ZipCode is found in nested sub document then use JOIN criteria like this (e.g. OrderID,LocationInfo &gt; ZipInfo &gt; ZipCode AS LocationInfo.ZipInfo.ZipCode). If your JOIN condition contains column from Array then your condition may looks like this Orders.$.OrderID AS Orders.OrderID (assuming You have named your property in input document as Orders.$.OrderID). For more information about how to using $ inside Update document see this https://docs.mongodb.com/manual/reference/operator/update/positional/#op._S_"
                  expressionType="Notify"
                  name="ColumnsForLookup">idFactura,idItem</property>
                <property
                  dataType="System.String"
                  description="Load options can be used to provide additional instruction for Update/Upsert/Delete operations.&#xA;Syntax: &lt;option1&gt;=&lt;value1&gt;;&lt;option2&gt;=&lt;value2&gt;.....&lt;optionN&gt;=&lt;valueN&gt;&#xA;Following options are supported right now for MongoDB update/upsert/delete operations &#xA;• op : [Default Value = $set] Use this option to specify additional update operator (e.g. none, $set, $push, $pull, $inc, $mul, $rename etc.). If you set op=none then you have to supply update operator along with your input document mapped to input column __DOCUMENT__ e.g. {$set : {..your document..} } . For more info visit https://docs.mongodb.org/manual/reference/operator/update/&#xA;• multi : [Default Value = true] Set this to true if you want to affect more than one records for matching input lookup keys. If you just want to update one record if multiple records returned then set this to false. &#xA;&#xA;For Update/Upsert/Delete you will need JOIN columns (set as different property) Make sure JOIN column name is correctly spelled, its found inside supplied DOCUMENT or mapped separately as input column. Also make sure its named correctly (its case-sensitive). If you are using column alias then check syntax (JOIN with alias must be like this yourColumnNameFromInputDoc AS yourColumnNameFromServerDoc). If you are joining sub document column which is nested then specify JOIN condition like this LocationInfo &gt; ZipInfo &gt; ZipCode AS LocationInfo.ZipInfo.ZipCode&#xA;"
                  expressionType="Notify"
                  name="LoadOptions">op=$set;multi=true</property>
                <property
                  dataType="System.Int32"
                  description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                  expressionType="Notify"
                  name="MetaDataScanMode"
                  typeConverter="ZappySys.Common.Data.MetaDataScanMode, ZappySys.Common, Version=1.0.2019.11015, Culture=neutral, PublicKeyToken=1903265a93eae502">4</property>
                <property
                  dataType="System.Int32"
                  description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                  expressionType="Notify"
                  name="MetaDataCustomLength">1000</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">ZappySys.MongoDBDestination</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Importar Ventas a Mongo\MongoDB Destination.Connections[ZS-MONGODB]"
                  connectionManagerID="Package.ConnectionManagers[MongoDB 1]"
                  connectionManagerRefId="Package.ConnectionManagers[MongoDB 1]"
                  description="Runtime connection for this component"
                  name="ZS-MONGODB" />
              </connections>
              <inputs>
                <input
                  refId="Package\Importar Ventas a Mongo\MongoDB Destination.Inputs[MongoDBDestinationInput]"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="MongoDBDestinationInput"
                  truncationRowDisposition="FailComponent">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\MongoDB Destination.Inputs[MongoDBDestinationInput].Columns[ZS_JSON_OUT]"
                      cachedDataType="nText"
                      cachedName="ZS_JSON_OUT"
                      externalMetadataColumnId="Package\Importar Ventas a Mongo\MongoDB Destination.Inputs[MongoDBDestinationInput].ExternalColumns[__DOCUMENT__]"
                      lineageId="Package\Importar Ventas a Mongo\JSON Generator Transform.Outputs[JsonGeneratorTransformOutput].Columns[ZS_JSON_OUT]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\MongoDB Destination.Inputs[MongoDBDestinationInput].ExternalColumns[__DOCUMENT__]"
                      dataType="nText"
                      description="This column is used to map input JSON Document. When this column is mapped input must contain JSON Document you want to load in target MongoDB collection. All other mappings are ignored when this column is mapped."
                      name="__DOCUMENT__" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\MongoDB Destination.Inputs[MongoDBDestinationInput].ExternalColumns[_id]"
                      codePage="1252"
                      dataType="str"
                      length="96"
                      name="_id" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\MongoDB Destination.Inputs[MongoDBDestinationInput].ExternalColumns[idFactura]"
                      dataType="wstr"
                      length="12"
                      name="idFactura" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\MongoDB Destination.Inputs[MongoDBDestinationInput].ExternalColumns[fecha]"
                      dataType="wstr"
                      length="12"
                      name="fecha" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\MongoDB Destination.Inputs[MongoDBDestinationInput].ExternalColumns[fechaVencimiento]"
                      dataType="wstr"
                      length="12"
                      name="fechaVencimiento" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\MongoDB Destination.Inputs[MongoDBDestinationInput].ExternalColumns[idCliente]"
                      dataType="wstr"
                      length="12"
                      name="idCliente" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\MongoDB Destination.Inputs[MongoDBDestinationInput].ExternalColumns[item]"
                      dataType="wstr"
                      length="592"
                      name="item" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\MongoDB Destination.Inputs[MongoDBDestinationInput].ExternalColumns[cantidad]"
                      dataType="wstr"
                      length="12"
                      name="cantidad" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\MongoDB Destination.Inputs[MongoDBDestinationInput].ExternalColumns[moneda]"
                      dataType="wstr"
                      length="12"
                      name="moneda" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\MongoDB Destination.Inputs[MongoDBDestinationInput].ExternalColumns[precio]"
                      dataType="wstr"
                      length="12"
                      name="precio" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\MongoDB Destination.Inputs[MongoDBDestinationInput].ExternalColumns[total]"
                      dataType="wstr"
                      length="12"
                      name="total" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\MongoDB Destination.Inputs[MongoDBDestinationInput].ExternalColumns[almacén]"
                      dataType="wstr"
                      length="12"
                      name="almacén" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\MongoDB Destination.Inputs[MongoDBDestinationInput].ExternalColumns[idVendedor]"
                      dataType="wstr"
                      length="12"
                      name="idVendedor" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\MongoDB Destination.Inputs[MongoDBDestinationInput].ExternalColumns[totalUSD]"
                      dataType="wstr"
                      length="12"
                      name="totalUSD" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\MongoDB Destination.Inputs[MongoDBDestinationInput].ExternalColumns[impuesto]"
                      dataType="wstr"
                      length="12"
                      name="impuesto" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\MongoDB Destination.Inputs[MongoDBDestinationInput].ExternalColumns[impuestoUSD]"
                      dataType="wstr"
                      length="12"
                      name="impuestoUSD" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\MongoDB Destination.Inputs[MongoDBDestinationInput].ExternalColumns[tipoCambio]"
                      dataType="wstr"
                      length="12"
                      name="tipoCambio" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\MongoDB Destination.Inputs[MongoDBDestinationInput].ExternalColumns[ganacia]"
                      dataType="wstr"
                      length="12"
                      name="ganacia" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\MongoDB Destination.Inputs[MongoDBDestinationInput].ExternalColumns[gananciaUSD]"
                      dataType="wstr"
                      length="12"
                      name="gananciaUSD" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Importar Ventas a Mongo\MongoDB Destination.Outputs[MongoDBDestination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="MongoDBDestination Error Output"
                  synchronousInputId="Package\Importar Ventas a Mongo\MongoDB Destination.Inputs[MongoDBDestinationInput]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\MongoDB Destination.Outputs[MongoDBDestination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Importar Ventas a Mongo\MongoDB Destination.Outputs[MongoDBDestination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\MongoDB Destination.Outputs[MongoDBDestination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Importar Ventas a Mongo\MongoDB Destination.Outputs[MongoDBDestination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\MongoDB Destination.Outputs[MongoDBDestination Error Output].Columns[ErrorColumnName]"
                      codePage="1252"
                      dataType="str"
                      length="128"
                      lineageId="Package\Importar Ventas a Mongo\MongoDB Destination.Outputs[MongoDBDestination Error Output].Columns[ErrorColumnName]"
                      name="ErrorColumnName" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\MongoDB Destination.Outputs[MongoDBDestination Error Output].Columns[ErrorMessage]"
                      dataType="wstr"
                      length="1024"
                      lineageId="Package\Importar Ventas a Mongo\MongoDB Destination.Outputs[MongoDBDestination Error Output].Columns[ErrorMessage]"
                      name="ErrorMessage" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Importar Ventas a Mongo\MongoDB Destination 2"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="MongoDB Destination; ZappySys LLC (c) All Rights Reserved; SSIS PowerPack; http://www.zappysys.com/support"
              description="The MongoDB Destination is used to write NoSQL data to MongoDB collection. NoSQL table has no strict schema and each row may contain different number of attributes unlike traditional RDBMS table."
              name="MongoDB Destination 2"
              usesDispositions="true"
              version="5">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Enables use of custom lookup query for Update / Upsert or Delete Operation. By default JOIN condition for target record match is generated automatically based on columns you supply in ColumnsForLookup property. However in some cases you need to supply custom condition for lookup to perform complex operations, in such case enable this option. When you enable this option you must supply map __DOCUMENT__ input column. String you supply to this column should be in this format &lt;command&gt;&lt;query&gt;YOUR_LOOKUP_QUERY&lt;/query&gt;&lt;document&gt;YOUR_JSON_DOC&lt;/document&gt;&lt;/command&gt;. Lookup query in &lt;query&gt; tag can be either Mongo JSON format (e.g. { &quot;CustomerID&quot; : &quot;AAA&quot;, &quot;Orders.OrderID&quot; : { &quot;$ne&quot; : &quot;1000&quot; } }) or you can use ZappySys SQL query (e.g. select * from mytable where CustomerID='AAA' and [Orders.$.OrderID] != '1000' )"
                  expressionType="Notify"
                  name="EnableCustomLookupQuery">false</property>
                <property
                  dataType="System.Int32"
                  description="LoggingMode determines how much information is logged during Package Execution. Set Logging mode to Debugging for maximum log."
                  expressionType="Notify"
                  name="LoggingMode"
                  typeConverter="ZappySys.PowerPack.Common.LoggingMode, ZappySys.PowerPack140, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                <property
                  dataType="System.Boolean"
                  description="When you enable this property it will prefix timestamp before Log messages."
                  expressionType="Notify"
                  name="PrefixTimestamp">false</property>
                <property
                  dataType="System.Null"
                  expressionType="Notify"
                  name="SelfRef"
                  typeConverter="NOTBROWSABLE" />
                <property
                  dataType="System.Boolean"
                  description="When this option is true then each batch is processed in bulk mode in first attempt and when it fails that particular batch is processed in row by row mode to detect bad record. By default when error occurs all records from that batch is rejected but when this option is true you can process all good records and only reject records causing error."
                  expressionType="Notify"
                  name="SwitchToRowByRowOnBatchFail">false</property>
                <property
                  dataType="System.String"
                  description="Table name from where you want to read data"
                  expressionType="Notify"
                  name="TableName"
                  typeConverter="ZappySys.PowerPack.Converters.TableEditor,ZappySys.PowerPack140.UI,Version=1.0.0.0,Culture=neutral,PublicKeyToken=1903265a93eae502">facturas</property>
                <property
                  dataType="System.Int32"
                  description="Indicates how many records are process in a single request. Setting this value to 0 will extract all records in single request."
                  expressionType="Notify"
                  name="BatchSize">500</property>
                <property
                  dataType="System.Int32"
                  description="Indicates Access Mode of data (e.g. Table or Sql Query)"
                  expressionType="Notify"
                  name="AccessMode"
                  typeConverter="ZappySys.PowerPack.Common.DataAccessMode, ZappySys.PowerPack140, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">0</property>
                <property
                  dataType="System.String"
                  description="Specifies SQL query to access data. This setting is ignored when access mode is set to Table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies operation for destination data load (e.g. Insert, Reload etc). Default operation is Insert (data always appended to target)."
                  expressionType="Notify"
                  name="Operation"
                  typeConverter="ZappySys.PowerPack.Common.DestinationOperation, ZappySys.PowerPack140, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1903265a93eae502">3</property>
                <property
                  dataType="System.String"
                  description="Update/Upsert/Delete you will need JOIN columns. If you have not specified JOIN column in Mapping Editor then supply here. Specify comma separated list of target column names which can be used to lookup documents on target for selected Operation. Column names are case-sensitive. Make sure JOIN column name is correctly spelled. JOIN column can be part of supplied input DOCUMENT or it can be mapped separately as input column on Mapping Editor. When JOIN column is found inside nested sub document (i.e. not in first level) then you have to use hierarchy separator (&gt;) and server side path for same column (Use dot). Example: if you joining by two columns OrderID and ZipCode where ZipCode is found in nested sub document then use JOIN criteria like this (e.g. OrderID,LocationInfo &gt; ZipInfo &gt; ZipCode AS LocationInfo.ZipInfo.ZipCode). If your JOIN condition contains column from Array then your condition may looks like this Orders.$.OrderID AS Orders.OrderID (assuming You have named your property in input document as Orders.$.OrderID). For more information about how to using $ inside Update document see this https://docs.mongodb.com/manual/reference/operator/update/positional/#op._S_"
                  expressionType="Notify"
                  name="ColumnsForLookup">idFactura,idItem</property>
                <property
                  dataType="System.String"
                  description="Load options can be used to provide additional instruction for Update/Upsert/Delete operations.&#xA;Syntax: &lt;option1&gt;=&lt;value1&gt;;&lt;option2&gt;=&lt;value2&gt;.....&lt;optionN&gt;=&lt;valueN&gt;&#xA;Following options are supported right now for MongoDB update/upsert/delete operations &#xA;• op : [Default Value = $set] Use this option to specify additional update operator (e.g. none, $set, $push, $pull, $inc, $mul, $rename etc.). If you set op=none then you have to supply update operator along with your input document mapped to input column __DOCUMENT__ e.g. {$set : {..your document..} } . For more info visit https://docs.mongodb.org/manual/reference/operator/update/&#xA;• multi : [Default Value = true] Set this to true if you want to affect more than one records for matching input lookup keys. If you just want to update one record if multiple records returned then set this to false. &#xA;&#xA;For Update/Upsert/Delete you will need JOIN columns (set as different property) Make sure JOIN column name is correctly spelled, its found inside supplied DOCUMENT or mapped separately as input column. Also make sure its named correctly (its case-sensitive). If you are using column alias then check syntax (JOIN with alias must be like this yourColumnNameFromInputDoc AS yourColumnNameFromServerDoc). If you are joining sub document column which is nested then specify JOIN condition like this LocationInfo &gt; ZipInfo &gt; ZipCode AS LocationInfo.ZipInfo.ZipCode&#xA;"
                  expressionType="Notify"
                  name="LoadOptions">op=$set;multi=true</property>
                <property
                  dataType="System.Int32"
                  description="Metadata scan mode controls how data type and length is determined. By default few records scanned to determine datatype/length. Changing ScanMode affects length/datatype accuracy."
                  expressionType="Notify"
                  name="MetaDataScanMode"
                  typeConverter="ZappySys.Common.Data.MetaDataScanMode, ZappySys.Common, Version=1.0.2019.11015, Culture=neutral, PublicKeyToken=1903265a93eae502">4</property>
                <property
                  dataType="System.Int32"
                  description="Length for all string column. This option is only valid for MetaDataScanMode=Custom"
                  expressionType="Notify"
                  name="MetaDataCustomLength">1000</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">ZappySys.MongoDBDestination</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Importar Ventas a Mongo\MongoDB Destination 2.Connections[ZS-MONGODB]"
                  connectionManagerID="Package.ConnectionManagers[MongoDB 1]"
                  connectionManagerRefId="Package.ConnectionManagers[MongoDB 1]"
                  description="Runtime connection for this component"
                  name="ZS-MONGODB" />
              </connections>
              <inputs>
                <input
                  refId="Package\Importar Ventas a Mongo\MongoDB Destination 2.Inputs[MongoDBDestinationInput]"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="MongoDBDestinationInput"
                  truncationRowDisposition="FailComponent">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\MongoDB Destination 2.Inputs[MongoDBDestinationInput].Columns[ZS_JSON_OUT]"
                      cachedDataType="nText"
                      cachedName="ZS_JSON_OUT"
                      externalMetadataColumnId="Package\Importar Ventas a Mongo\MongoDB Destination 2.Inputs[MongoDBDestinationInput].ExternalColumns[__DOCUMENT__]"
                      lineageId="Package\Importar Ventas a Mongo\JSON Generator Transform 1.Outputs[JsonGeneratorTransformOutput].Columns[ZS_JSON_OUT]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\MongoDB Destination 2.Inputs[MongoDBDestinationInput].ExternalColumns[__DOCUMENT__]"
                      dataType="nText"
                      description="This column is used to map input JSON Document. When this column is mapped input must contain JSON Document you want to load in target MongoDB collection. All other mappings are ignored when this column is mapped."
                      name="__DOCUMENT__" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\MongoDB Destination 2.Inputs[MongoDBDestinationInput].ExternalColumns[_id]"
                      codePage="1252"
                      dataType="str"
                      length="96"
                      name="_id" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\MongoDB Destination 2.Inputs[MongoDBDestinationInput].ExternalColumns[idFactura]"
                      dataType="wstr"
                      length="12"
                      name="idFactura" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\MongoDB Destination 2.Inputs[MongoDBDestinationInput].ExternalColumns[fecha]"
                      dataType="wstr"
                      length="12"
                      name="fecha" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\MongoDB Destination 2.Inputs[MongoDBDestinationInput].ExternalColumns[fechaVencimiento]"
                      dataType="wstr"
                      length="12"
                      name="fechaVencimiento" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\MongoDB Destination 2.Inputs[MongoDBDestinationInput].ExternalColumns[idCliente]"
                      dataType="wstr"
                      length="12"
                      name="idCliente" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\MongoDB Destination 2.Inputs[MongoDBDestinationInput].ExternalColumns[idItem]"
                      dataType="wstr"
                      length="12"
                      name="idItem" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\MongoDB Destination 2.Inputs[MongoDBDestinationInput].ExternalColumns[item]"
                      dataType="wstr"
                      length="592"
                      name="item" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\MongoDB Destination 2.Inputs[MongoDBDestinationInput].ExternalColumns[cantidad]"
                      dataType="wstr"
                      length="12"
                      name="cantidad" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\MongoDB Destination 2.Inputs[MongoDBDestinationInput].ExternalColumns[moneda]"
                      dataType="wstr"
                      length="12"
                      name="moneda" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\MongoDB Destination 2.Inputs[MongoDBDestinationInput].ExternalColumns[precio]"
                      dataType="wstr"
                      length="12"
                      name="precio" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\MongoDB Destination 2.Inputs[MongoDBDestinationInput].ExternalColumns[total]"
                      dataType="wstr"
                      length="12"
                      name="total" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\MongoDB Destination 2.Inputs[MongoDBDestinationInput].ExternalColumns[almacén]"
                      dataType="wstr"
                      length="12"
                      name="almacén" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\MongoDB Destination 2.Inputs[MongoDBDestinationInput].ExternalColumns[idVendedor]"
                      dataType="wstr"
                      length="12"
                      name="idVendedor" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\MongoDB Destination 2.Inputs[MongoDBDestinationInput].ExternalColumns[totalUSD]"
                      dataType="wstr"
                      length="12"
                      name="totalUSD" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\MongoDB Destination 2.Inputs[MongoDBDestinationInput].ExternalColumns[impuesto]"
                      dataType="wstr"
                      length="12"
                      name="impuesto" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\MongoDB Destination 2.Inputs[MongoDBDestinationInput].ExternalColumns[impuestoUSD]"
                      dataType="wstr"
                      length="12"
                      name="impuestoUSD" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\MongoDB Destination 2.Inputs[MongoDBDestinationInput].ExternalColumns[tipoCambio]"
                      dataType="wstr"
                      length="12"
                      name="tipoCambio" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\MongoDB Destination 2.Inputs[MongoDBDestinationInput].ExternalColumns[ganacia]"
                      dataType="wstr"
                      length="12"
                      name="ganacia" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\MongoDB Destination 2.Inputs[MongoDBDestinationInput].ExternalColumns[gananciaUSD]"
                      dataType="wstr"
                      length="12"
                      name="gananciaUSD" />
                    <externalMetadataColumn
                      refId="Package\Importar Ventas a Mongo\MongoDB Destination 2.Inputs[MongoDBDestinationInput].ExternalColumns[idItemNoReconocido]"
                      dataType="r8"
                      name="idItemNoReconocido" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Importar Ventas a Mongo\MongoDB Destination 2.Outputs[MongoDBDestination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="MongoDBDestination Error Output"
                  synchronousInputId="Package\Importar Ventas a Mongo\MongoDB Destination 2.Inputs[MongoDBDestinationInput]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\MongoDB Destination 2.Outputs[MongoDBDestination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Importar Ventas a Mongo\MongoDB Destination 2.Outputs[MongoDBDestination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\MongoDB Destination 2.Outputs[MongoDBDestination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Importar Ventas a Mongo\MongoDB Destination 2.Outputs[MongoDBDestination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\MongoDB Destination 2.Outputs[MongoDBDestination Error Output].Columns[ErrorColumnName]"
                      codePage="1252"
                      dataType="str"
                      length="128"
                      lineageId="Package\Importar Ventas a Mongo\MongoDB Destination 2.Outputs[MongoDBDestination Error Output].Columns[ErrorColumnName]"
                      name="ErrorColumnName" />
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\MongoDB Destination 2.Outputs[MongoDBDestination Error Output].Columns[ErrorMessage]"
                      dataType="wstr"
                      length="1024"
                      lineageId="Package\Importar Ventas a Mongo\MongoDB Destination 2.Outputs[MongoDBDestination Error Output].Columns[ErrorMessage]"
                      name="ErrorMessage" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Importar Ventas a Mongo\Ordenar"
              componentClassID="Microsoft.Sort"
              contactInfo="Ordenar;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; Todos los derechos reservados; http://www.microsoft.com/sql/support;1"
              description="Ordena los datos de entrada de manera ascendente o descendente cuando no es posible ordenarlos en su origen. Por ejemplo, se ordenan los datos de ventas por 'id. de cliente' antes de que se escriban en un archivo plano y se entreguen a otro departamento. Nota: no se recomienda realizar esta transformación para grandes flujos de datos."
              name="Ordenar"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indica si la transformación Ordenar quita filas con valores de ordenación duplicados."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Especifica el número máximo de subprocesos que se deben usar para la ordenación."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Importar Ventas a Mongo\Ordenar.Inputs[Entrada de ordenación]"
                  name="Entrada de ordenación">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\Ordenar.Inputs[Entrada de ordenación].Columns[idFactura]"
                      cachedDataType="wstr"
                      cachedLength="36"
                      cachedName="idFactura"
                      lineageId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[idFactura]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Especifica las opciones de comparación para datos de caracteres."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Especifica el criterio de ordenación de la columna."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\Ordenar.Inputs[Entrada de ordenación].Columns[idCliente]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="idCliente"
                      lineageId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[idCliente]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Especifica las opciones de comparación para datos de caracteres."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Especifica el criterio de ordenación de la columna."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\Ordenar.Inputs[Entrada de ordenación].Columns[idItem]"
                      cachedDataType="wstr"
                      cachedLength="28"
                      cachedName="idItem"
                      lineageId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[idItem]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Especifica las opciones de comparación para datos de caracteres."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Especifica el criterio de ordenación de la columna."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\Ordenar.Inputs[Entrada de ordenación].Columns[almacén]"
                      cachedDataType="wstr"
                      cachedLength="8"
                      cachedName="almacén"
                      lineageId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[almacén]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Especifica las opciones de comparación para datos de caracteres."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Especifica el criterio de ordenación de la columna."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\Ordenar.Inputs[Entrada de ordenación].Columns[idVendedor]"
                      cachedDataType="wstr"
                      cachedLength="8"
                      cachedName="idVendedor"
                      lineageId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[idVendedor]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Especifica las opciones de comparación para datos de caracteres."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Especifica el criterio de ordenación de la columna."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\Ordenar.Inputs[Entrada de ordenación].Columns[fecha]"
                      cachedDataType="date"
                      cachedName="Copy of fecha_corregida"
                      lineageId="Package\Importar Ventas a Mongo\Conversión de datos.Outputs[Salida de conversión de datos].Columns[Copy of fecha_corregida]"
                      name="fecha">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Especifica las opciones de comparación para datos de caracteres."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Especifica el criterio de ordenación de la columna."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\Ordenar.Inputs[Entrada de ordenación].Columns[fechaVencimiento]"
                      cachedDataType="date"
                      cachedName="Copy of fechaVencimiento_corregida"
                      lineageId="Package\Importar Ventas a Mongo\Conversión de datos.Outputs[Salida de conversión de datos].Columns[Copy of fechaVencimiento_corregida]"
                      name="fechaVencimiento">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Especifica las opciones de comparación para datos de caracteres."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Especifica el criterio de ordenación de la columna."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\Ordenar.Inputs[Entrada de ordenación].Columns[cantidad]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of cantidad"
                      lineageId="Package\Importar Ventas a Mongo\Conversión de datos.Outputs[Salida de conversión de datos].Columns[Copy of cantidad]"
                      name="cantidad">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Especifica las opciones de comparación para datos de caracteres."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Especifica el criterio de ordenación de la columna."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\Ordenar.Inputs[Entrada de ordenación].Columns[precio]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of precio"
                      lineageId="Package\Importar Ventas a Mongo\Conversión de datos.Outputs[Salida de conversión de datos].Columns[Copy of precio]"
                      name="precio">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Especifica las opciones de comparación para datos de caracteres."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Especifica el criterio de ordenación de la columna."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\Ordenar.Inputs[Entrada de ordenación].Columns[total]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of total"
                      lineageId="Package\Importar Ventas a Mongo\Conversión de datos.Outputs[Salida de conversión de datos].Columns[Copy of total]"
                      name="total">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Especifica las opciones de comparación para datos de caracteres."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Especifica el criterio de ordenación de la columna."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\Ordenar.Inputs[Entrada de ordenación].Columns[totalUSD]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of totalUSD"
                      lineageId="Package\Importar Ventas a Mongo\Conversión de datos.Outputs[Salida de conversión de datos].Columns[Copy of totalUSD]"
                      name="totalUSD">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Especifica las opciones de comparación para datos de caracteres."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Especifica el criterio de ordenación de la columna."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\Ordenar.Inputs[Entrada de ordenación].Columns[impuesto]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of impuesto"
                      lineageId="Package\Importar Ventas a Mongo\Conversión de datos.Outputs[Salida de conversión de datos].Columns[Copy of impuesto]"
                      name="impuesto">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Especifica las opciones de comparación para datos de caracteres."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Especifica el criterio de ordenación de la columna."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\Ordenar.Inputs[Entrada de ordenación].Columns[impuestoUSD]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of impuestoUSD"
                      lineageId="Package\Importar Ventas a Mongo\Conversión de datos.Outputs[Salida de conversión de datos].Columns[Copy of impuestoUSD]"
                      name="impuestoUSD">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Especifica las opciones de comparación para datos de caracteres."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Especifica el criterio de ordenación de la columna."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\Ordenar.Inputs[Entrada de ordenación].Columns[tipoCambio]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of tipoCambio"
                      lineageId="Package\Importar Ventas a Mongo\Conversión de datos.Outputs[Salida de conversión de datos].Columns[Copy of tipoCambio]"
                      name="tipoCambio">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Especifica las opciones de comparación para datos de caracteres."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Especifica el criterio de ordenación de la columna."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\Ordenar.Inputs[Entrada de ordenación].Columns[ganacia]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of ganacia"
                      lineageId="Package\Importar Ventas a Mongo\Conversión de datos.Outputs[Salida de conversión de datos].Columns[Copy of ganacia]"
                      name="ganacia">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Especifica las opciones de comparación para datos de caracteres."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Especifica el criterio de ordenación de la columna."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\Ordenar.Inputs[Entrada de ordenación].Columns[gananciaUSD]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of gananciaUSD"
                      lineageId="Package\Importar Ventas a Mongo\Conversión de datos.Outputs[Salida de conversión de datos].Columns[Copy of gananciaUSD]"
                      name="gananciaUSD">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Especifica las opciones de comparación para datos de caracteres."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Especifica el criterio de ordenación de la columna."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\Ordenar.Inputs[Entrada de ordenación].Columns[moneda]"
                      cachedDataType="wstr"
                      cachedLength="12"
                      cachedName="moneda"
                      lineageId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[moneda]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Especifica las opciones de comparación para datos de caracteres."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Especifica el criterio de ordenación de la columna."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Importar Ventas a Mongo\Ordenar.Outputs[Salida de ordenación]"
                  isSorted="true"
                  name="Salida de ordenación">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Ordenar.Outputs[Salida de ordenación].Columns[idFactura]"
                      dataType="wstr"
                      length="36"
                      lineageId="Package\Importar Ventas a Mongo\Ordenar.Outputs[Salida de ordenación].Columns[idFactura]"
                      name="idFactura">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Especifica el identificador de linaje de la columna de entrada que está asociada a esta columna de salida."
                          name="SortColumnId">#{Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[idFactura]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Ordenar.Outputs[Salida de ordenación].Columns[idCliente]"
                      dataType="wstr"
                      length="20"
                      lineageId="Package\Importar Ventas a Mongo\Ordenar.Outputs[Salida de ordenación].Columns[idCliente]"
                      name="idCliente">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Especifica el identificador de linaje de la columna de entrada que está asociada a esta columna de salida."
                          name="SortColumnId">#{Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[idCliente]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Ordenar.Outputs[Salida de ordenación].Columns[IDItem]"
                      dataType="wstr"
                      length="28"
                      lineageId="Package\Importar Ventas a Mongo\Ordenar.Outputs[Salida de ordenación].Columns[IDItem]"
                      name="IDItem"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Especifica el identificador de linaje de la columna de entrada que está asociada a esta columna de salida."
                          name="SortColumnId">#{Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[idItem]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Ordenar.Outputs[Salida de ordenación].Columns[almacén]"
                      dataType="wstr"
                      length="8"
                      lineageId="Package\Importar Ventas a Mongo\Ordenar.Outputs[Salida de ordenación].Columns[almacén]"
                      name="almacén">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Especifica el identificador de linaje de la columna de entrada que está asociada a esta columna de salida."
                          name="SortColumnId">#{Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[almacén]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Ordenar.Outputs[Salida de ordenación].Columns[idVendedor]"
                      dataType="wstr"
                      length="8"
                      lineageId="Package\Importar Ventas a Mongo\Ordenar.Outputs[Salida de ordenación].Columns[idVendedor]"
                      name="idVendedor">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Especifica el identificador de linaje de la columna de entrada que está asociada a esta columna de salida."
                          name="SortColumnId">#{Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[idVendedor]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Ordenar.Outputs[Salida de ordenación].Columns[fecha]"
                      dataType="date"
                      lineageId="Package\Importar Ventas a Mongo\Ordenar.Outputs[Salida de ordenación].Columns[fecha]"
                      name="fecha">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Especifica el identificador de linaje de la columna de entrada que está asociada a esta columna de salida."
                          name="SortColumnId">#{Package\Importar Ventas a Mongo\Conversión de datos.Outputs[Salida de conversión de datos].Columns[Copy of fecha_corregida]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Ordenar.Outputs[Salida de ordenación].Columns[fechaVencimiento]"
                      dataType="date"
                      lineageId="Package\Importar Ventas a Mongo\Ordenar.Outputs[Salida de ordenación].Columns[fechaVencimiento]"
                      name="fechaVencimiento">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Especifica el identificador de linaje de la columna de entrada que está asociada a esta columna de salida."
                          name="SortColumnId">#{Package\Importar Ventas a Mongo\Conversión de datos.Outputs[Salida de conversión de datos].Columns[Copy of fechaVencimiento_corregida]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Ordenar.Outputs[Salida de ordenación].Columns[cantidad]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Importar Ventas a Mongo\Ordenar.Outputs[Salida de ordenación].Columns[cantidad]"
                      name="cantidad">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Especifica el identificador de linaje de la columna de entrada que está asociada a esta columna de salida."
                          name="SortColumnId">#{Package\Importar Ventas a Mongo\Conversión de datos.Outputs[Salida de conversión de datos].Columns[Copy of cantidad]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Ordenar.Outputs[Salida de ordenación].Columns[precio]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Importar Ventas a Mongo\Ordenar.Outputs[Salida de ordenación].Columns[precio]"
                      name="precio">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Especifica el identificador de linaje de la columna de entrada que está asociada a esta columna de salida."
                          name="SortColumnId">#{Package\Importar Ventas a Mongo\Conversión de datos.Outputs[Salida de conversión de datos].Columns[Copy of precio]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Ordenar.Outputs[Salida de ordenación].Columns[total]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Importar Ventas a Mongo\Ordenar.Outputs[Salida de ordenación].Columns[total]"
                      name="total">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Especifica el identificador de linaje de la columna de entrada que está asociada a esta columna de salida."
                          name="SortColumnId">#{Package\Importar Ventas a Mongo\Conversión de datos.Outputs[Salida de conversión de datos].Columns[Copy of total]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Ordenar.Outputs[Salida de ordenación].Columns[totalUSD]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Importar Ventas a Mongo\Ordenar.Outputs[Salida de ordenación].Columns[totalUSD]"
                      name="totalUSD">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Especifica el identificador de linaje de la columna de entrada que está asociada a esta columna de salida."
                          name="SortColumnId">#{Package\Importar Ventas a Mongo\Conversión de datos.Outputs[Salida de conversión de datos].Columns[Copy of totalUSD]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Ordenar.Outputs[Salida de ordenación].Columns[impuesto]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Importar Ventas a Mongo\Ordenar.Outputs[Salida de ordenación].Columns[impuesto]"
                      name="impuesto">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Especifica el identificador de linaje de la columna de entrada que está asociada a esta columna de salida."
                          name="SortColumnId">#{Package\Importar Ventas a Mongo\Conversión de datos.Outputs[Salida de conversión de datos].Columns[Copy of impuesto]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Ordenar.Outputs[Salida de ordenación].Columns[impuestoUSD]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Importar Ventas a Mongo\Ordenar.Outputs[Salida de ordenación].Columns[impuestoUSD]"
                      name="impuestoUSD">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Especifica el identificador de linaje de la columna de entrada que está asociada a esta columna de salida."
                          name="SortColumnId">#{Package\Importar Ventas a Mongo\Conversión de datos.Outputs[Salida de conversión de datos].Columns[Copy of impuestoUSD]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Ordenar.Outputs[Salida de ordenación].Columns[tipoCambio]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Importar Ventas a Mongo\Ordenar.Outputs[Salida de ordenación].Columns[tipoCambio]"
                      name="tipoCambio">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Especifica el identificador de linaje de la columna de entrada que está asociada a esta columna de salida."
                          name="SortColumnId">#{Package\Importar Ventas a Mongo\Conversión de datos.Outputs[Salida de conversión de datos].Columns[Copy of tipoCambio]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Ordenar.Outputs[Salida de ordenación].Columns[ganacia]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Importar Ventas a Mongo\Ordenar.Outputs[Salida de ordenación].Columns[ganacia]"
                      name="ganacia">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Especifica el identificador de linaje de la columna de entrada que está asociada a esta columna de salida."
                          name="SortColumnId">#{Package\Importar Ventas a Mongo\Conversión de datos.Outputs[Salida de conversión de datos].Columns[Copy of ganacia]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Ordenar.Outputs[Salida de ordenación].Columns[gananciaUSD]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Importar Ventas a Mongo\Ordenar.Outputs[Salida de ordenación].Columns[gananciaUSD]"
                      name="gananciaUSD">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Especifica el identificador de linaje de la columna de entrada que está asociada a esta columna de salida."
                          name="SortColumnId">#{Package\Importar Ventas a Mongo\Conversión de datos.Outputs[Salida de conversión de datos].Columns[Copy of gananciaUSD]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Ordenar.Outputs[Salida de ordenación].Columns[moneda]"
                      dataType="wstr"
                      length="12"
                      lineageId="Package\Importar Ventas a Mongo\Ordenar.Outputs[Salida de ordenación].Columns[moneda]"
                      name="moneda">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Especifica el identificador de linaje de la columna de entrada que está asociada a esta columna de salida."
                          name="SortColumnId">#{Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput].Columns[moneda]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Importar Ventas a Mongo\Ordenar 1"
              componentClassID="Microsoft.Sort"
              contactInfo="Ordenar;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; Todos los derechos reservados; http://www.microsoft.com/sql/support;1"
              description="Ordena los datos de entrada de manera ascendente o descendente cuando no es posible ordenarlos en su origen. Por ejemplo, se ordenan los datos de ventas por 'id. de cliente' antes de que se escriban en un archivo plano y se entreguen a otro departamento. Nota: no se recomienda realizar esta transformación para grandes flujos de datos."
              name="Ordenar 1"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indica si la transformación Ordenar quita filas con valores de ordenación duplicados."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Especifica el número máximo de subprocesos que se deben usar para la ordenación."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Importar Ventas a Mongo\Ordenar 1.Inputs[Entrada de ordenación]"
                  name="Entrada de ordenación">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\Ordenar 1.Inputs[Entrada de ordenación].Columns[ID]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="ID"
                      lineageId="Package\Importar Ventas a Mongo\Items.Outputs[Salida de origen de Excel].Columns[ID]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Especifica las opciones de comparación para datos de caracteres."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Especifica el criterio de ordenación de la columna."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\Ordenar 1.Inputs[Entrada de ordenación].Columns[IDItem]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="IDItem"
                      lineageId="Package\Importar Ventas a Mongo\Items.Outputs[Salida de origen de Excel].Columns[IDItem]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Especifica las opciones de comparación para datos de caracteres."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Especifica el criterio de ordenación de la columna."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\Ordenar 1.Inputs[Entrada de ordenación].Columns[Descripcion]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Descripcion"
                      lineageId="Package\Importar Ventas a Mongo\Items.Outputs[Salida de origen de Excel].Columns[Descripcion]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Especifica las opciones de comparación para datos de caracteres."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Especifica el criterio de ordenación de la columna."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Importar Ventas a Mongo\Ordenar 1.Inputs[Entrada de ordenación].Columns[IDGrupo]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="IDGrupo"
                      lineageId="Package\Importar Ventas a Mongo\Items.Outputs[Salida de origen de Excel].Columns[IDGrupo]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Especifica las opciones de comparación para datos de caracteres."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Especifica el criterio de ordenación de la columna."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Importar Ventas a Mongo\Ordenar 1.Outputs[Salida de ordenación]"
                  isSorted="true"
                  name="Salida de ordenación">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Ordenar 1.Outputs[Salida de ordenación].Columns[ID]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Importar Ventas a Mongo\Ordenar 1.Outputs[Salida de ordenación].Columns[ID]"
                      name="ID">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Especifica el identificador de linaje de la columna de entrada que está asociada a esta columna de salida."
                          name="SortColumnId">#{Package\Importar Ventas a Mongo\Items.Outputs[Salida de origen de Excel].Columns[ID]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Ordenar 1.Outputs[Salida de ordenación].Columns[IDItem]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Importar Ventas a Mongo\Ordenar 1.Outputs[Salida de ordenación].Columns[IDItem]"
                      name="IDItem"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Especifica el identificador de linaje de la columna de entrada que está asociada a esta columna de salida."
                          name="SortColumnId">#{Package\Importar Ventas a Mongo\Items.Outputs[Salida de origen de Excel].Columns[IDItem]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Ordenar 1.Outputs[Salida de ordenación].Columns[Descripcion]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Importar Ventas a Mongo\Ordenar 1.Outputs[Salida de ordenación].Columns[Descripcion]"
                      name="Descripcion">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Especifica el identificador de linaje de la columna de entrada que está asociada a esta columna de salida."
                          name="SortColumnId">#{Package\Importar Ventas a Mongo\Items.Outputs[Salida de origen de Excel].Columns[Descripcion]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Importar Ventas a Mongo\Ordenar 1.Outputs[Salida de ordenación].Columns[IDGrupo]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Importar Ventas a Mongo\Ordenar 1.Outputs[Salida de ordenación].Columns[IDGrupo]"
                      name="IDGrupo">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Especifica el identificador de linaje de la columna de entrada que está asociada a esta columna de salida."
                          name="SortColumnId">#{Package\Importar Ventas a Mongo\Items.Outputs[Salida de origen de Excel].Columns[IDGrupo]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Importar Ventas a Mongo.Paths[existe]"
              endId="Package\Importar Ventas a Mongo\JSON Generator Transform.Inputs[JsonInput3]"
              name="existe"
              startId="Package\Importar Ventas a Mongo\División condicional.Outputs[existe]" />
            <path
              refId="Package\Importar Ventas a Mongo.Paths[JsonGeneratorTransformOutput]"
              endId="Package\Importar Ventas a Mongo\MongoDB Destination.Inputs[MongoDBDestinationInput]"
              name="JsonGeneratorTransformOutput"
              startId="Package\Importar Ventas a Mongo\JSON Generator Transform.Outputs[JsonGeneratorTransformOutput]" />
            <path
              refId="Package\Importar Ventas a Mongo.Paths[JsonGeneratorTransformOutput1]"
              endId="Package\Importar Ventas a Mongo\MongoDB Destination 2.Inputs[MongoDBDestinationInput]"
              name="JsonGeneratorTransformOutput"
              startId="Package\Importar Ventas a Mongo\JSON Generator Transform 1.Outputs[JsonGeneratorTransformOutput]" />
            <path
              refId="Package\Importar Ventas a Mongo.Paths[JsonSourceOutput]"
              endId="Package\Importar Ventas a Mongo\Columna derivada 1.Inputs[Entrada de columna derivada]"
              name="JsonSourceOutput"
              startId="Package\Importar Ventas a Mongo\mongo 101-200.Outputs[JsonSourceOutput]" />
            <path
              refId="Package\Importar Ventas a Mongo.Paths[noexiste]"
              endId="Package\Importar Ventas a Mongo\Columna derivada.Inputs[Entrada de columna derivada]"
              name="noexiste"
              startId="Package\Importar Ventas a Mongo\División condicional.Outputs[noexiste]" />
            <path
              refId="Package\Importar Ventas a Mongo.Paths[Salida de columna derivada]"
              endId="Package\Importar Ventas a Mongo\JSON Generator Transform 1.Inputs[JsonInput1]"
              name="Salida de columna derivada"
              startId="Package\Importar Ventas a Mongo\Columna derivada.Outputs[Salida de columna derivada]" />
            <path
              refId="Package\Importar Ventas a Mongo.Paths[Salida de columna derivada1]"
              endId="Package\Importar Ventas a Mongo\Conversión de datos.Inputs[Entrada de conversión de datos]"
              name="Salida de columna derivada"
              startId="Package\Importar Ventas a Mongo\Columna derivada 1.Outputs[Salida de columna derivada]" />
            <path
              refId="Package\Importar Ventas a Mongo.Paths[Salida de combinación de mezcla]"
              endId="Package\Importar Ventas a Mongo\División condicional.Inputs[Entrada de división condicional]"
              name="Salida de combinación de mezcla"
              startId="Package\Importar Ventas a Mongo\Combinación de mezcla.Outputs[Salida de combinación de mezcla]" />
            <path
              refId="Package\Importar Ventas a Mongo.Paths[Salida de conversión de datos]"
              endId="Package\Importar Ventas a Mongo\Ordenar.Inputs[Entrada de ordenación]"
              name="Salida de conversión de datos"
              startId="Package\Importar Ventas a Mongo\Conversión de datos.Outputs[Salida de conversión de datos]" />
            <path
              refId="Package\Importar Ventas a Mongo.Paths[Salida de ordenación]"
              endId="Package\Importar Ventas a Mongo\Combinación de mezcla.Inputs[Entrada derecha de combinación de mezcla]"
              name="Salida de ordenación"
              startId="Package\Importar Ventas a Mongo\Ordenar 1.Outputs[Salida de ordenación]" />
            <path
              refId="Package\Importar Ventas a Mongo.Paths[Salida de ordenación1]"
              endId="Package\Importar Ventas a Mongo\Combinación de mezcla.Inputs[Entrada izquierda de combinación de mezcla]"
              name="Salida de ordenación"
              startId="Package\Importar Ventas a Mongo\Ordenar.Outputs[Salida de ordenación]" />
            <path
              refId="Package\Importar Ventas a Mongo.Paths[Salida de origen de Excel]"
              endId="Package\Importar Ventas a Mongo\Ordenar 1.Inputs[Entrada de ordenación]"
              name="Salida de origen de Excel"
              startId="Package\Importar Ventas a Mongo\Items.Outputs[Salida de origen de Excel]" />
            <path
              refId="Package\Importar Ventas a Mongo.Paths[Salida de origen de Excel1]"
              endId="Package\Importar Ventas a Mongo\JSON Generator Transform.Inputs[JsonInput1]"
              name="Salida de origen de Excel"
              startId="Package\Importar Ventas a Mongo\Items 1.Outputs[Salida de origen de Excel]" />
            <path
              refId="Package\Importar Ventas a Mongo.Paths[Salida de origen de Excel2]"
              endId="Package\Importar Ventas a Mongo\JSON Generator Transform.Inputs[JsonInput2]"
              name="Salida de origen de Excel"
              startId="Package\Importar Ventas a Mongo\Grupo Items.Outputs[Salida de origen de Excel]" />
            <path
              refId="Package\Importar Ventas a Mongo.Paths[Salida de origen de Excel3]"
              endId="Package\Importar Ventas a Mongo\JSON Generator Transform 1.Inputs[JsonInput2]"
              name="Salida de origen de Excel"
              startId="Package\Importar Ventas a Mongo\Items 1 1.Outputs[Salida de origen de Excel]" />
            <path
              refId="Package\Importar Ventas a Mongo.Paths[Salida de origen de Excel4]"
              endId="Package\Importar Ventas a Mongo\JSON Generator Transform 1.Inputs[JsonInput3]"
              name="Salida de origen de Excel"
              startId="Package\Importar Ventas a Mongo\Grupo Items 1.Outputs[Salida de origen de Excel]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="203,42"
          Id="Package\Importar Ventas a Mongo"
          TopLeft="204.5,133.5" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Importar Ventas a Mongo">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="223,42"
          Id="Package\Importar Ventas a Mongo\JSON Generator Transform 1"
          TopLeft="241,623" />
        <NodeLayout
          Size="106,42"
          Id="Package\Importar Ventas a Mongo\Items 1 1"
          TopLeft="70,641" />
        <NodeLayout
          Size="195,42"
          Id="Package\Importar Ventas a Mongo\MongoDB Destination 2"
          TopLeft="499,760" />
        <NodeLayout
          Size="139,42"
          Id="Package\Importar Ventas a Mongo\Grupo Items 1"
          TopLeft="190,729" />
        <NodeLayout
          Size="176,42"
          Id="Package\Importar Ventas a Mongo\División condicional"
          TopLeft="157,408" />
        <NodeLayout
          Size="196,42"
          Id="Package\Importar Ventas a Mongo\Combinación de mezcla"
          TopLeft="151,334" />
        <NodeLayout
          Size="186,42"
          Id="Package\Importar Ventas a Mongo\MongoDB Destination"
          TopLeft="592,612" />
        <NodeLayout
          Size="214,42"
          Id="Package\Importar Ventas a Mongo\JSON Generator Transform"
          TopLeft="445,459" />
        <NodeLayout
          Size="128,42"
          Id="Package\Importar Ventas a Mongo\Ordenar 1"
          TopLeft="255,259" />
        <NodeLayout
          Size="156,42"
          Id="Package\Importar Ventas a Mongo\mongo 101-200"
          TopLeft="38,46" />
        <NodeLayout
          Size="106,42"
          Id="Package\Importar Ventas a Mongo\Items"
          TopLeft="312,159" />
        <NodeLayout
          Size="180,42"
          Id="Package\Importar Ventas a Mongo\Conversión de datos"
          TopLeft="69,152" />
        <NodeLayout
          Size="177,42"
          Id="Package\Importar Ventas a Mongo\Columna derivada 1"
          TopLeft="231,57" />
        <NodeLayout
          Size="139,42"
          Id="Package\Importar Ventas a Mongo\Grupo Items"
          TopLeft="728,208" />
        <NodeLayout
          Size="106,42"
          Id="Package\Importar Ventas a Mongo\Items 1"
          TopLeft="504,156" />
        <NodeLayout
          Size="168,42"
          Id="Package\Importar Ventas a Mongo\Columna derivada"
          TopLeft="167,509" />
        <NodeLayout
          Size="119,42"
          Id="Package\Importar Ventas a Mongo\Ordenar"
          TopLeft="91,252" />
        <EdgeLayout
          Id="Package\Importar Ventas a Mongo.Paths[Salida de origen de Excel4]"
          TopLeft="259.5,729">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="93,-64"
              Start="0,0"
              End="93,-56.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-28" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-28"
                    Point2="0,-32"
                    Point3="4,-32" />
                  <mssgle:LineSegment
                    End="89,-32" />
                  <mssgle:CubicBezierSegment
                    Point1="89,-32"
                    Point2="93,-32"
                    Point3="93,-36" />
                  <mssgle:LineSegment
                    End="93,-56.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Importar Ventas a Mongo.Paths[Salida de origen de Excel3]"
          TopLeft="176,662">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="65,-18"
              Start="0,0"
              End="57.5,-18">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="28.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="28.5,0"
                    Point2="32.5,0"
                    Point3="32.5,-4" />
                  <mssgle:LineSegment
                    End="32.5,-14" />
                  <mssgle:CubicBezierSegment
                    Point1="32.5,-14"
                    Point2="32.5,-18"
                    Point3="36.5,-18" />
                  <mssgle:LineSegment
                    End="57.5,-18" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Importar Ventas a Mongo.Paths[Salida de origen de Excel2]"
          TopLeft="797.5,250">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-211.166666666667,209"
              Start="0,0"
              End="-211.166666666667,201.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,120.469387755102" />
                  <mssgle:CubicBezierSegment
                    Point1="0,120.469387755102"
                    Point2="0,124.469387755102"
                    Point3="-4,124.469387755102" />
                  <mssgle:LineSegment
                    End="-207.166666666667,124.469387755102" />
                  <mssgle:CubicBezierSegment
                    Point1="-207.166666666667,124.469387755102"
                    Point2="-211.166666666667,124.469387755102"
                    Point3="-211.166666666667,128.469387755102" />
                  <mssgle:LineSegment
                    End="-211.166666666667,201.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Importar Ventas a Mongo.Paths[Salida de origen de Excel1]"
          TopLeft="554.5,198">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,261"
              Start="0,0"
              End="0,253.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,253.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Importar Ventas a Mongo.Paths[Salida de origen de Excel]"
          TopLeft="365,201">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-46,58"
              Start="0,0"
              End="-46,50.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25"
                    Point2="0,29"
                    Point3="-4,29" />
                  <mssgle:LineSegment
                    End="-42,29" />
                  <mssgle:CubicBezierSegment
                    Point1="-42,29"
                    Point2="-46,29"
                    Point3="-46,33" />
                  <mssgle:LineSegment
                    End="-46,50.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Importar Ventas a Mongo.Paths[Salida de ordenación1]"
          TopLeft="150.5,294">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="67.1666666666667,40"
              Start="0,0"
              End="67.1666666666667,32.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.8056680161943" />
                  <mssgle:CubicBezierSegment
                    Point1="0,19.8056680161943"
                    Point2="0,23.8056680161943"
                    Point3="4,23.8056680161943" />
                  <mssgle:LineSegment
                    End="63.1666666666667,23.8056680161943" />
                  <mssgle:CubicBezierSegment
                    Point1="63.1666666666667,23.8056680161943"
                    Point2="67.1666666666667,23.8056680161943"
                    Point3="67.1666666666667,27.8056680161943" />
                  <mssgle:LineSegment
                    End="67.1666666666667,32.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Importar Ventas a Mongo.Paths[Salida de ordenación]"
          TopLeft="319,301">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-38.6666666666667,33"
              Start="0,0"
              End="-38.6666666666667,25.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.6396761133603" />
                  <mssgle:CubicBezierSegment
                    Point1="0,15.6396761133603"
                    Point2="0,19.6396761133603"
                    Point3="-4,19.6396761133603" />
                  <mssgle:LineSegment
                    End="-34.6666666666667,19.6396761133603" />
                  <mssgle:CubicBezierSegment
                    Point1="-34.6666666666667,19.6396761133603"
                    Point2="-38.6666666666667,19.6396761133603"
                    Point3="-38.6666666666667,23.6396761133603" />
                  <mssgle:LineSegment
                    End="-38.6666666666667,25.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Importar Ventas a Mongo.Paths[Salida de conversión de datos]"
          TopLeft="159,194">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-8.5,58"
              Start="0,0"
              End="-8.5,50.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25"
                    Point2="0,29"
                    Point3="-4,29" />
                  <mssgle:LineSegment
                    End="-4.5,29" />
                  <mssgle:CubicBezierSegment
                    Point1="-4.5,29"
                    Point2="-8.5,29"
                    Point3="-8.5,33" />
                  <mssgle:LineSegment
                    End="-8.5,50.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Importar Ventas a Mongo.Paths[Salida de combinación de mezcla]"
          TopLeft="247,376">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,32"
              Start="0,0"
              End="0,24.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Importar Ventas a Mongo.Paths[Salida de columna derivada1]"
          TopLeft="319.5,99">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-160.5,53"
              Start="0,0"
              End="-160.5,45.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22.5"
                    Point2="0,26.5"
                    Point3="-4,26.5" />
                  <mssgle:LineSegment
                    End="-156.5,26.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-156.5,26.5"
                    Point2="-160.5,26.5"
                    Point3="-160.5,30.5" />
                  <mssgle:LineSegment
                    End="-160.5,45.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Importar Ventas a Mongo.Paths[Salida de columna derivada]"
          TopLeft="251,551">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="101.5,72"
              Start="0,0"
              End="101.5,64.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32" />
                  <mssgle:CubicBezierSegment
                    Point1="0,32"
                    Point2="0,36"
                    Point3="4,36" />
                  <mssgle:LineSegment
                    End="97.5,36" />
                  <mssgle:CubicBezierSegment
                    Point1="97.5,36"
                    Point2="101.5,36"
                    Point3="101.5,40" />
                  <mssgle:LineSegment
                    End="101.5,64.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Importar Ventas a Mongo.Paths[noexiste]"
          TopLeft="248,450">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,59"
              Start="0,0"
              End="0,51.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,51.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-18.82296875,21.0146484375,37.6459375,9.470703125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Importar Ventas a Mongo.Paths[JsonSourceOutput]"
          TopLeft="194,67">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="37,11"
              Start="0,0"
              End="29.5,11">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="14.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="14.5,0"
                    Point2="18.5,0"
                    Point3="18.5,4" />
                  <mssgle:LineSegment
                    End="18.5,7" />
                  <mssgle:CubicBezierSegment
                    Point1="18.5,7"
                    Point2="18.5,11"
                    Point3="22.5,11" />
                  <mssgle:LineSegment
                    End="29.5,11" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Importar Ventas a Mongo.Paths[JsonGeneratorTransformOutput1]"
          TopLeft="388.333333333333,665">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="208.166666666667,95"
              Start="0,0"
              End="208.166666666667,87.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.4060552092609" />
                  <mssgle:CubicBezierSegment
                    Point1="0,34.4060552092609"
                    Point2="0,38.4060552092609"
                    Point3="4,38.4060552092609" />
                  <mssgle:LineSegment
                    End="204.166666666667,38.4060552092609" />
                  <mssgle:CubicBezierSegment
                    Point1="204.166666666667,38.4060552092609"
                    Point2="208.166666666667,38.4060552092609"
                    Point3="208.166666666667,42.4060552092609" />
                  <mssgle:LineSegment
                    End="208.166666666667,87.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Importar Ventas a Mongo.Paths[JsonGeneratorTransformOutput]"
          TopLeft="552,501">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="133,111"
              Start="0,0"
              End="133,103.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,51.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,51.5"
                    Point2="0,55.5"
                    Point3="4,55.5" />
                  <mssgle:LineSegment
                    End="129,55.5" />
                  <mssgle:CubicBezierSegment
                    Point1="129,55.5"
                    Point2="133,55.5"
                    Point3="133,59.5" />
                  <mssgle:LineSegment
                    End="133,103.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Importar Ventas a Mongo.Paths[existe]"
          TopLeft="333,429">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="112,51"
              Start="0,0"
              End="104.5,51">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="52,0" />
                  <mssgle:CubicBezierSegment
                    Point1="52,0"
                    Point2="56,0"
                    Point3="56,4" />
                  <mssgle:LineSegment
                    End="56,47" />
                  <mssgle:CubicBezierSegment
                    Point1="56,47"
                    Point2="56,51"
                    Point3="60,51" />
                  <mssgle:LineSegment
                    End="104.5,51" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="42.49404296875,-15.451171875,27.0119140625,9.451171875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Importar Ventas a Mongo\Items 1 1">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Importar Ventas a Mongo\Grupo Items 1">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Importar Ventas a Mongo\Items">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Importar Ventas a Mongo\Grupo Items">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>